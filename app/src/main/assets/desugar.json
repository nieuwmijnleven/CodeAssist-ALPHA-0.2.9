{"identifier":"com.tools.android:desugar_jdk_libs_configuration:2.0.2","required_compilation_api_level":30,"synthesized_library_classes_package_prefix":"j$/","support_all_callbacks_from_library":true,"shrinker_config":"-keepclassmembers class j$.** extends java.io.Serializable { void \u003cinit\u003e(); private static final java.io.ObjectStreamField[] serialPersistentFields; static final long serialVersionUID; java.lang.Object readResolve(); java.lang.Object writeReplace(); private void readObject(java.io.ObjectInputStream); private void writeObject(java.io.ObjectOutputStream); private void readObjectNoData(); }\n-keepclassmembers class j$.util.concurrent.ConcurrentHashMap$TreeBin { int lockState; }\n-keepclassmembers class j$.util.concurrent.ConcurrentHashMap { int sizeCtl; int transferIndex; long baseCount; int cellsBusy; }\n-keepclassmembers class j$.util.concurrent.ConcurrentHashMap$CounterCell { long value; }\n-keepclassmembers enum * { public static **[] values(); public static ** valueOf(java.lang.String); public static final !synthetic \u003cfields\u003e; }\n-keeppackagenames java.**\n-keeppackagenames j$.**\n-keepclassmembers class j$.util.IntSummaryStatistics { long count; long sum; int min; int max; }\n-keepclassmembers class j$.util.LongSummaryStatistics { long count; long sum; long min; long max; }\n-keepclassmembers class j$.util.DoubleSummaryStatistics { long count; double sum; double min; double max; }\n-keepattributes Signature\n-keepattributes EnclosingMethod\n-keepattributes InnerClasses\n-dontwarn sun.misc.Unsafe\n-dontwarn wrapper.**","configuration_format_version":200,"common_flags":[{"api_level_below_or_equal":10000,"api_level_greater_or_equal":26,"rewrite_type":{"a$DesugarClock":"b$DesugarClock","a$DesugarClock$DesugarTickClock":"b$DesugarClock$DesugarTickClock","a$DesugarLocalDate":"b$DesugarLocalDate","a$DesugarOffsetTime":"b$DesugarOffsetTime"},"static_field_retarget":{"a$LocalDate a$LocalDate#EPOCH":"a$LocalDate a$DesugarLocalDate#EPOCH"},"static_retarget":{"a$Clock a$Clock#tickMillis(a$ZoneId)":"a$Clock a$DesugarClock#tickMillis(a$ZoneId)","a$LocalDate a$LocalDate#ofInstant(a$Instant, a$ZoneId)":"a$LocalDate a$DesugarLocalDate#ofInstant(a$Instant, a$ZoneId)"},"non_emulated_virtual_retarget":{"c$Stream a$LocalDate#datesUntil(a$LocalDate)":"c$Stream a$DesugarLocalDate#datesUntil(a$LocalDate, a$LocalDate)","c$Stream a$LocalDate#datesUntil(a$LocalDate, a$Period)":"c$Stream a$DesugarLocalDate#datesUntil(a$LocalDate, a$LocalDate, a$Period)","long a$LocalDate#toEpochSecond(a$LocalTime, a$ZoneOffset)":"long a$DesugarLocalDate#toEpochSecond(a$LocalDate, a$LocalTime, a$ZoneOffset)","long a$OffsetTime#toEpochSecond(a$LocalDate)":"long a$DesugarOffsetTime#toEpochSecond(a$OffsetTime, a$LocalDate)"},"amend_library_method":["public static a$Clock a$Clock#tickMillis(a$ZoneId)","public static a$LocalDate a$LocalDate#ofInstant(a$Instant, a$ZoneId)","public long a$OffsetTime#toEpochSecond(a$LocalDate)","public long a$LocalDate#toEpochSecond(a$LocalTime, a$ZoneOffset)","public c$Stream a$LocalDate#datesUntil(a$LocalDate)","public c$Stream a$LocalDate#datesUntil(a$LocalDate, a$Period)"],"amend_library_field":["public static a$LocalDate a$LocalDate#EPOCH"]},{"api_level_below_or_equal":10000,"api_level_greater_or_equal":24,"rewrite_type":{"c$DesugarDoubleStream":"d$DesugarDoubleStream","c$DesugarDoubleStream$1":"d$DesugarDoubleStream$1","c$DesugarIntStream":"d$DesugarIntStream","c$DesugarIntStream$1":"d$DesugarIntStream$1","c$DesugarLongStream":"d$DesugarLongStream","c$DesugarLongStream$1":"d$DesugarLongStream$1","c$DesugarStream":"d$DesugarStream","c$DesugarStream$1":"d$DesugarStream$1"},"static_retarget":{"c$DoubleStream c$DoubleStream#iterate(double, f$DoublePredicate, f$DoubleUnaryOperator)":"c$DoubleStream c$DesugarDoubleStream#iterate(double, f$DoublePredicate, f$DoubleUnaryOperator)","c$IntStream c$IntStream#iterate(int, f$IntPredicate, f$IntUnaryOperator)":"c$IntStream c$DesugarIntStream#iterate(int, f$IntPredicate, f$IntUnaryOperator)","c$LongStream c$LongStream#iterate(long, f$LongPredicate, f$LongUnaryOperator)":"c$LongStream c$DesugarLongStream#iterate(long, f$LongPredicate, f$LongUnaryOperator)","c$Stream c$Stream#iterate(e$Object, f$Predicate, f$UnaryOperator)":"c$Stream c$DesugarStream#iterate(e$Object, f$Predicate, f$UnaryOperator)"}},{"api_level_below_or_equal":32,"rewrite_type":{"g$DesugarTimeUnit":"h$DesugarTimeUnit","g$DesugarTimeUnit$1":"h$DesugarTimeUnit$1"},"static_retarget":{"g$TimeUnit g$TimeUnit#of(i$ChronoUnit)":"g$TimeUnit g$DesugarTimeUnit#of(i$ChronoUnit)"},"non_emulated_virtual_retarget":{"i$ChronoUnit g$TimeUnit#toChronoUnit()":"i$ChronoUnit g$DesugarTimeUnit#toChronoUnit(g$TimeUnit)","long g$TimeUnit#convert(a$Duration)":"long g$DesugarTimeUnit#convert(g$TimeUnit, a$Duration)"},"amend_library_method":["public static g$TimeUnit g$TimeUnit#of(i$ChronoUnit)","public i$ChronoUnit g$TimeUnit#toChronoUnit()","public long g$TimeUnit#convert(a$Duration)"]},{"api_level_below_or_equal":32,"api_level_greater_or_equal":24,"rewrite_type":{"c$DesugarCollectors":"d$DesugarCollectors","c$DesugarCollectors$CollectorImpl":"d$DesugarCollectors$CollectorImpl"},"static_retarget":{"c$Collector c$Collectors#filtering(f$Predicate, c$Collector)":"c$Collector c$DesugarCollectors#filtering(f$Predicate, c$Collector)","c$Collector c$Collectors#flatMapping(f$Function, c$Collector)":"c$Collector c$DesugarCollectors#flatMapping(f$Function, c$Collector)","c$Collector c$Collectors#toUnmodifiableList()":"c$Collector c$DesugarCollectors#toUnmodifiableList()","c$Collector c$Collectors#toUnmodifiableMap(f$Function, f$Function)":"c$Collector c$DesugarCollectors#toUnmodifiableMap(f$Function, f$Function)","c$Collector c$Collectors#toUnmodifiableMap(f$Function, f$Function, f$BinaryOperator)":"c$Collector c$DesugarCollectors#toUnmodifiableMap(f$Function, f$Function, f$BinaryOperator)","c$Collector c$Collectors#toUnmodifiableSet()":"c$Collector c$DesugarCollectors#toUnmodifiableSet()"},"amend_library_method":["public static c$Collector c$Collectors#toUnmodifiableList()","public static c$Collector c$Collectors#filtering(f$Predicate, c$Collector)","public static c$Collector c$Collectors#toUnmodifiableMap(f$Function, f$Function)","public static c$Collector c$Collectors#flatMapping(f$Function, c$Collector)","public static c$Collector c$Collectors#toUnmodifiableMap(f$Function, f$Function, f$BinaryOperator)","public static c$Collector c$Collectors#toUnmodifiableSet()"]},{"api_level_below_or_equal":30,"api_level_greater_or_equal":26,"rewrite_type":{"a$DesugarDuration":"b$DesugarDuration","a$DesugarLocalTime":"b$DesugarLocalTime"},"static_retarget":{"a$LocalTime a$LocalTime#ofInstant(a$Instant, a$ZoneId)":"a$LocalTime a$DesugarLocalTime#ofInstant(a$Instant, a$ZoneId)"},"non_emulated_virtual_retarget":{"a$Duration a$Duration#truncatedTo(i$TemporalUnit)":"a$Duration a$DesugarDuration#truncatedTo(a$Duration, i$TemporalUnit)","int a$Duration#toHoursPart()":"int a$DesugarDuration#toHoursPart(a$Duration)","int a$Duration#toMillisPart()":"int a$DesugarDuration#toMillisPart(a$Duration)","int a$Duration#toMinutesPart()":"int a$DesugarDuration#toMinutesPart(a$Duration)","int a$Duration#toNanosPart()":"int a$DesugarDuration#toNanosPart(a$Duration)","int a$Duration#toSecondsPart()":"int a$DesugarDuration#toSecondsPart(a$Duration)","long a$Duration#dividedBy(a$Duration)":"long a$DesugarDuration#dividedBy(a$Duration, a$Duration)","long a$Duration#toDaysPart()":"long a$DesugarDuration#toDaysPart(a$Duration)","long a$Duration#toSeconds()":"long a$DesugarDuration#toSeconds(a$Duration)","long a$LocalTime#toEpochSecond(a$LocalDate, a$ZoneOffset)":"long a$DesugarLocalTime#toEpochSecond(a$LocalTime, a$LocalDate, a$ZoneOffset)"},"amend_library_method":["public int a$Duration#toMinutesPart()","public int a$Duration#toMillisPart()","public int a$Duration#toSecondsPart()","public long a$Duration#toSeconds()","public int a$Duration#toNanosPart()","public a$Duration a$Duration#truncatedTo(i$TemporalUnit)","public static a$LocalTime a$LocalTime#ofInstant(a$Instant, a$ZoneId)","public long a$Duration#dividedBy(a$Duration)","public long a$Duration#toDaysPart()","public int a$Duration#toHoursPart()","public long a$LocalTime#toEpochSecond(a$LocalDate, a$ZoneOffset)"]},{"api_level_below_or_equal":29,"rewrite_type":{"g$Flow":"h$Flow","g$Flow$Processor":"h$Flow$Processor","g$Flow$Publisher":"h$Flow$Publisher","g$Flow$Subscriber":"h$Flow$Subscriber","g$Flow$Subscription":"h$Flow$Subscription"},"wrapper":{"g$Flow$Publisher":[["void g$Flow$Publisher#subscribe(g$Flow$Subscriber)"],false,[]],"g$Flow$Subscriber":[["void g$Flow$Subscriber#onComplete()","void g$Flow$Subscriber#onError(e$Throwable)","void g$Flow$Subscriber#onNext(e$Object)","void g$Flow$Subscriber#onSubscribe(g$Flow$Subscription)"],false,[]],"g$Flow$Subscription":[["void g$Flow$Subscription#cancel()","void g$Flow$Subscription#request(long)"],false,[]]}},{"api_level_below_or_equal":25,"rewrite_type":{"a$Clock":"b$Clock","a$Clock$FixedClock":"b$Clock$FixedClock","a$Clock$OffsetClock":"b$Clock$OffsetClock","a$Clock$SystemClock":"b$Clock$SystemClock","a$Clock$TickClock":"b$Clock$TickClock","a$DateTimeException":"b$DateTimeException","a$DayOfWeek":"b$DayOfWeek","a$DesugarClock":"b$DesugarClock","a$DesugarClock$DesugarTickClock":"b$DesugarClock$DesugarTickClock","a$DesugarDuration":"b$DesugarDuration","a$DesugarLocalDate":"b$DesugarLocalDate","a$DesugarLocalTime":"b$DesugarLocalTime","a$DesugarOffsetTime":"b$DesugarOffsetTime","a$Duration":"b$Duration","a$Duration$1":"b$Duration$1","a$Duration$DurationUnits":"b$Duration$DurationUnits","a$Duration$Lazy":"b$Duration$Lazy","a$Instant":"b$Instant","a$Instant$1":"b$Instant$1","a$LocalDate":"b$LocalDate","a$LocalDate$1":"b$LocalDate$1","a$LocalDateTime":"b$LocalDateTime","a$LocalDateTime$1":"b$LocalDateTime$1","a$LocalTime":"b$LocalTime","a$LocalTime$1":"b$LocalTime$1","a$Month":"b$Month","a$Month$1":"b$Month$1","a$MonthDay":"b$MonthDay","a$MonthDay$1":"b$MonthDay$1","a$OffsetDateTime":"b$OffsetDateTime","a$OffsetDateTime$1":"b$OffsetDateTime$1","a$OffsetTime":"b$OffsetTime","a$OffsetTime$1":"b$OffsetTime$1","a$Period":"b$Period","a$Ser":"b$Ser","a$TimeConversions":"b$TimeConversions","a$Year":"b$Year","a$Year$1":"b$Year$1","a$YearMonth":"b$YearMonth","a$YearMonth$1":"b$YearMonth$1","a$ZoneId":"b$ZoneId","a$ZoneId$1":"b$ZoneId$1","a$ZoneOffset":"b$ZoneOffset","a$ZoneRegion":"b$ZoneRegion","a$ZonedDateTime":"b$ZonedDateTime","a$ZonedDateTime$1":"b$ZonedDateTime$1","i$ChronoField":"j$ChronoField","i$ChronoUnit":"j$ChronoUnit","i$IsoFields":"j$IsoFields","i$IsoFields$1":"j$IsoFields$1","i$IsoFields$Field":"j$IsoFields$Field","i$IsoFields$Field$1":"j$IsoFields$Field$1","i$IsoFields$Field$2":"j$IsoFields$Field$2","i$IsoFields$Field$3":"j$IsoFields$Field$3","i$IsoFields$Field$4":"j$IsoFields$Field$4","i$IsoFields$Unit":"j$IsoFields$Unit","i$JulianFields":"j$JulianFields","i$JulianFields$Field":"j$JulianFields$Field","i$Temporal":"j$Temporal","i$TemporalAccessor":"j$TemporalAccessor","i$TemporalAdjuster":"j$TemporalAdjuster","i$TemporalAdjusters":"j$TemporalAdjusters","i$TemporalAmount":"j$TemporalAmount","i$TemporalField":"j$TemporalField","i$TemporalQueries":"j$TemporalQueries","i$TemporalQueries$1":"j$TemporalQueries$1","i$TemporalQueries$2":"j$TemporalQueries$2","i$TemporalQueries$3":"j$TemporalQueries$3","i$TemporalQueries$4":"j$TemporalQueries$4","i$TemporalQueries$5":"j$TemporalQueries$5","i$TemporalQueries$6":"j$TemporalQueries$6","i$TemporalQueries$7":"j$TemporalQueries$7","i$TemporalQuery":"j$TemporalQuery","i$TemporalUnit":"j$TemporalUnit","i$UnsupportedTemporalTypeException":"j$UnsupportedTemporalTypeException","i$ValueRange":"j$ValueRange","i$WeekFields":"j$WeekFields","i$WeekFields$ComputedDayOfField":"j$WeekFields$ComputedDayOfField","k$AbstractChronology":"l$AbstractChronology","k$ChronoLocalDate":"l$ChronoLocalDate","k$ChronoLocalDateImpl":"l$ChronoLocalDateImpl","k$ChronoLocalDateImpl$1":"l$ChronoLocalDateImpl$1","k$ChronoLocalDateTime":"l$ChronoLocalDateTime","k$ChronoLocalDateTimeImpl":"l$ChronoLocalDateTimeImpl","k$ChronoLocalDateTimeImpl$1":"l$ChronoLocalDateTimeImpl$1","k$ChronoPeriod":"l$ChronoPeriod","k$ChronoPeriodImpl":"l$ChronoPeriodImpl","k$ChronoZonedDateTime":"l$ChronoZonedDateTime","k$ChronoZonedDateTime$1":"l$ChronoZonedDateTime$1","k$ChronoZonedDateTimeImpl":"l$ChronoZonedDateTimeImpl","k$ChronoZonedDateTimeImpl$1":"l$ChronoZonedDateTimeImpl$1","k$Chronology":"l$Chronology","k$Chronology$1":"l$Chronology$1","k$DesugarIsoChronology":"l$DesugarIsoChronology","k$Era":"l$Era","k$HijrahChronology":"l$HijrahChronology","k$HijrahChronology$1":"l$HijrahChronology$1","k$HijrahDate":"l$HijrahDate","k$HijrahDate$1":"l$HijrahDate$1","k$HijrahEra":"l$HijrahEra","k$IsoChronology":"l$IsoChronology","k$IsoEra":"l$IsoEra","k$JapaneseChronology":"l$JapaneseChronology","k$JapaneseChronology$1":"l$JapaneseChronology$1","k$JapaneseDate":"l$JapaneseDate","k$JapaneseDate$1":"l$JapaneseDate$1","k$JapaneseEra":"l$JapaneseEra","k$MinguoChronology":"l$MinguoChronology","k$MinguoChronology$1":"l$MinguoChronology$1","k$MinguoDate":"l$MinguoDate","k$MinguoDate$1":"l$MinguoDate$1","k$MinguoEra":"l$MinguoEra","k$Ser":"l$Ser","k$ThaiBuddhistChronology":"l$ThaiBuddhistChronology","k$ThaiBuddhistChronology$1":"l$ThaiBuddhistChronology$1","k$ThaiBuddhistDate":"l$ThaiBuddhistDate","k$ThaiBuddhistDate$1":"l$ThaiBuddhistDate$1","k$ThaiBuddhistEra":"l$ThaiBuddhistEra","m$Ser":"n$Ser","m$TzdbZoneRulesProvider":"n$TzdbZoneRulesProvider","m$ZoneOffsetTransition":"n$ZoneOffsetTransition","m$ZoneOffsetTransitionRule":"n$ZoneOffsetTransitionRule","m$ZoneOffsetTransitionRule$1":"n$ZoneOffsetTransitionRule$1","m$ZoneOffsetTransitionRule$TimeDefinition":"n$ZoneOffsetTransitionRule$TimeDefinition","m$ZoneRules":"n$ZoneRules","m$ZoneRulesException":"n$ZoneRulesException","m$ZoneRulesProvider":"n$ZoneRulesProvider","m$ZoneRulesProvider$1":"n$ZoneRulesProvider$1","m$ZoneRulesProvider$TimeZoneRulesProvider":"n$ZoneRulesProvider$TimeZoneRulesProvider","o$DateTimeFormatter":"p$DateTimeFormatter","o$DateTimeFormatter$ClassicFormat":"p$DateTimeFormatter$ClassicFormat","o$DateTimeFormatterBuilder":"p$DateTimeFormatterBuilder","o$DateTimeFormatterBuilder$1":"p$DateTimeFormatterBuilder$1","o$DateTimeFormatterBuilder$2":"p$DateTimeFormatterBuilder$2","o$DateTimeFormatterBuilder$3":"p$DateTimeFormatterBuilder$3","o$DateTimeFormatterBuilder$CharLiteralPrinterParser":"p$DateTimeFormatterBuilder$CharLiteralPrinterParser","o$DateTimeFormatterBuilder$ChronoPrinterParser":"p$DateTimeFormatterBuilder$ChronoPrinterParser","o$DateTimeFormatterBuilder$CompositePrinterParser":"p$DateTimeFormatterBuilder$CompositePrinterParser","o$DateTimeFormatterBuilder$DateTimePrinterParser":"p$DateTimeFormatterBuilder$DateTimePrinterParser","o$DateTimeFormatterBuilder$DefaultValueParser":"p$DateTimeFormatterBuilder$DefaultValueParser","o$DateTimeFormatterBuilder$FractionPrinterParser":"p$DateTimeFormatterBuilder$FractionPrinterParser","o$DateTimeFormatterBuilder$InstantPrinterParser":"p$DateTimeFormatterBuilder$InstantPrinterParser","o$DateTimeFormatterBuilder$LocalizedOffsetIdPrinterParser":"p$DateTimeFormatterBuilder$LocalizedOffsetIdPrinterParser","o$DateTimeFormatterBuilder$LocalizedPrinterParser":"p$DateTimeFormatterBuilder$LocalizedPrinterParser","o$DateTimeFormatterBuilder$NumberPrinterParser":"p$DateTimeFormatterBuilder$NumberPrinterParser","o$DateTimeFormatterBuilder$OffsetIdPrinterParser":"p$DateTimeFormatterBuilder$OffsetIdPrinterParser","o$DateTimeFormatterBuilder$PadPrinterParserDecorator":"p$DateTimeFormatterBuilder$PadPrinterParserDecorator","o$DateTimeFormatterBuilder$PrefixTree":"p$DateTimeFormatterBuilder$PrefixTree","o$DateTimeFormatterBuilder$PrefixTree$CI":"p$DateTimeFormatterBuilder$PrefixTree$CI","o$DateTimeFormatterBuilder$PrefixTree$LENIENT":"p$DateTimeFormatterBuilder$PrefixTree$LENIENT","o$DateTimeFormatterBuilder$ReducedPrinterParser":"p$DateTimeFormatterBuilder$ReducedPrinterParser","o$DateTimeFormatterBuilder$SettingsParser":"p$DateTimeFormatterBuilder$SettingsParser","o$DateTimeFormatterBuilder$StringLiteralPrinterParser":"p$DateTimeFormatterBuilder$StringLiteralPrinterParser","o$DateTimeFormatterBuilder$TextPrinterParser":"p$DateTimeFormatterBuilder$TextPrinterParser","o$DateTimeFormatterBuilder$WeekBasedFieldPrinterParser":"p$DateTimeFormatterBuilder$WeekBasedFieldPrinterParser","o$DateTimeFormatterBuilder$ZoneIdPrinterParser":"p$DateTimeFormatterBuilder$ZoneIdPrinterParser","o$DateTimeFormatterBuilder$ZoneTextPrinterParser":"p$DateTimeFormatterBuilder$ZoneTextPrinterParser","o$DateTimeFormatterBuilderHelper":"p$DateTimeFormatterBuilderHelper","o$DateTimeParseContext":"p$DateTimeParseContext","o$DateTimeParseException":"p$DateTimeParseException","o$DateTimePrintContext":"p$DateTimePrintContext","o$DateTimePrintContext$1":"p$DateTimePrintContext$1","o$DateTimeTextProvider":"p$DateTimeTextProvider","o$DateTimeTextProvider$1":"p$DateTimeTextProvider$1","o$DateTimeTextProvider$LocaleStore":"p$DateTimeTextProvider$LocaleStore","o$DecimalStyle":"p$DecimalStyle","o$FormatStyle":"p$FormatStyle","o$Parsed":"p$Parsed","o$ResolverStyle":"p$ResolverStyle","o$SignStyle":"p$SignStyle","o$TextStyle":"p$TextStyle","o$ZoneName":"p$ZoneName","q$DesugarArrays":"r$DesugarArrays","q$DesugarCalendar":"r$DesugarCalendar","q$DesugarCollections":"r$DesugarCollections","q$DesugarCollections$SynchronizedMap":"r$DesugarCollections$SynchronizedMap","q$DesugarCollections$SynchronizedSortedMap":"r$DesugarCollections$SynchronizedSortedMap","q$DesugarDate":"r$DesugarDate","q$DesugarGregorianCalendar":"r$DesugarGregorianCalendar","q$DesugarLinkedHashSet":"r$DesugarLinkedHashSet","q$DesugarTimeZone":"r$DesugarTimeZone"},"rewrite_derived_type_only":{"q$Date":"r$Date","q$GregorianCalendar":"r$GregorianCalendar","q$TimeZone":"r$TimeZone"},"static_retarget":{"q$TimeZone q$TimeZone#getTimeZone(a$ZoneId)":"q$TimeZone q$DesugarTimeZone#getTimeZone(a$ZoneId)"},"emulated_virtual_retarget":{"a$Instant q$Date#toInstant()":[["a$Instant q$Date#toInstant()","11"],["a$Instant q$Date#toInstant()","10"],["a$Instant q$DesugarDate#toInstant(q$Date)","-1"],{}],"a$ZoneId q$TimeZone#toZoneId()":[["a$ZoneId q$TimeZone#toZoneId()","11"],["a$ZoneId q$TimeZone#toZoneId()","10"],["a$ZoneId q$DesugarTimeZone#toZoneId(q$TimeZone)","-1"],{}],"a$ZonedDateTime q$GregorianCalendar#toZonedDateTime()":[["a$ZonedDateTime q$GregorianCalendar#toZonedDateTime()","11"],["a$ZonedDateTime q$GregorianCalendar#toZonedDateTime()","10"],["a$ZonedDateTime q$DesugarGregorianCalendar#toZonedDateTime(q$GregorianCalendar)","-1"],{}]},"wrapper":{"a$Clock":[["a$Clock a$Clock#withZone(a$ZoneId)","a$Instant a$Clock#instant()","a$ZoneId a$Clock#getZone()","long a$Clock#millis()"],false,[]]},"custom_conversion":{"a$Duration":["a$Duration a$TimeConversions#convert(b$Duration)","b$Duration a$TimeConversions#convert(a$Duration)"],"a$Instant":["a$Instant a$TimeConversions#convert(b$Instant)","b$Instant a$TimeConversions#convert(a$Instant)"],"a$LocalDate":["a$LocalDate a$TimeConversions#convert(b$LocalDate)","b$LocalDate a$TimeConversions#convert(a$LocalDate)"],"a$LocalTime":["a$LocalTime a$TimeConversions#convert(b$LocalTime)","b$LocalTime a$TimeConversions#convert(a$LocalTime)"],"a$MonthDay":["a$MonthDay a$TimeConversions#convert(b$MonthDay)","b$MonthDay a$TimeConversions#convert(a$MonthDay)"],"a$Period":["a$Period a$TimeConversions#convert(b$Period)","b$Period a$TimeConversions#convert(a$Period)"],"a$ZoneId":["a$ZoneId a$TimeConversions#convert(b$ZoneId)","b$ZoneId a$TimeConversions#convert(a$ZoneId)"],"a$ZonedDateTime":["a$ZonedDateTime a$TimeConversions#convert(b$ZonedDateTime)","b$ZonedDateTime a$TimeConversions#convert(a$ZonedDateTime)"]}},{"api_level_below_or_equal":23,"rewrite_type":{"c$AbstractPipeline":"d$AbstractPipeline","c$AbstractShortCircuitTask":"d$AbstractShortCircuitTask","c$AbstractSpinedBuffer":"d$AbstractSpinedBuffer","c$AbstractTask":"d$AbstractTask","c$BaseStream":"d$BaseStream","c$Collector":"d$Collector","c$Collector$Characteristics":"d$Collector$Characteristics","c$Collectors":"d$Collectors","c$Collectors$1OptionalBox":"d$Collectors$1OptionalBox","c$Collectors$CollectorImpl":"d$Collectors$CollectorImpl","c$Collectors$Partition":"d$Collectors$Partition","c$Collectors$Partition$1":"d$Collectors$Partition$1","c$DesugarCollectors":"d$DesugarCollectors","c$DesugarCollectors$CollectorImpl":"d$DesugarCollectors$CollectorImpl","c$DesugarDoubleStream":"d$DesugarDoubleStream","c$DesugarDoubleStream$1":"d$DesugarDoubleStream$1","c$DesugarIntStream":"d$DesugarIntStream","c$DesugarIntStream$1":"d$DesugarIntStream$1","c$DesugarLongStream":"d$DesugarLongStream","c$DesugarLongStream$1":"d$DesugarLongStream$1","c$DesugarStream":"d$DesugarStream","c$DesugarStream$1":"d$DesugarStream$1","c$DistinctOps":"d$DistinctOps","c$DistinctOps$1":"d$DistinctOps$1","c$DistinctOps$1$1":"d$DistinctOps$1$1","c$DistinctOps$1$2":"d$DistinctOps$1$2","c$DoublePipeline":"d$DoublePipeline","c$DoublePipeline$1":"d$DoublePipeline$1","c$DoublePipeline$1$1":"d$DoublePipeline$1$1","c$DoublePipeline$2":"d$DoublePipeline$2","c$DoublePipeline$2$1":"d$DoublePipeline$2$1","c$DoublePipeline$3":"d$DoublePipeline$3","c$DoublePipeline$3$1":"d$DoublePipeline$3$1","c$DoublePipeline$4":"d$DoublePipeline$4","c$DoublePipeline$4$1":"d$DoublePipeline$4$1","c$DoublePipeline$5":"d$DoublePipeline$5","c$DoublePipeline$5$1":"d$DoublePipeline$5$1","c$DoublePipeline$6":"d$DoublePipeline$6","c$DoublePipeline$7":"d$DoublePipeline$7","c$DoublePipeline$7$1":"d$DoublePipeline$7$1","c$DoublePipeline$8":"d$DoublePipeline$8","c$DoublePipeline$8$1":"d$DoublePipeline$8$1","c$DoublePipeline$Head":"d$DoublePipeline$Head","c$DoublePipeline$StatefulOp":"d$DoublePipeline$StatefulOp","c$DoublePipeline$StatelessOp":"d$DoublePipeline$StatelessOp","c$DoubleStream":"d$DoubleStream","c$DoubleStream$1":"d$DoubleStream$1","c$DoubleStream$2":"d$DoubleStream$2","c$DoubleStream$Builder":"d$DoubleStream$Builder","c$FindOps":"d$FindOps","c$FindOps$FindOp":"d$FindOps$FindOp","c$FindOps$FindSink":"d$FindOps$FindSink","c$FindOps$FindSink$OfDouble":"d$FindOps$FindSink$OfDouble","c$FindOps$FindSink$OfInt":"d$FindOps$FindSink$OfInt","c$FindOps$FindSink$OfLong":"d$FindOps$FindSink$OfLong","c$FindOps$FindSink$OfRef":"d$FindOps$FindSink$OfRef","c$FindOps$FindTask":"d$FindOps$FindTask","c$FlatMapApiFlips":"d$FlatMapApiFlips","c$FlatMapApiFlips$DoubleFunctionStreamWrapper":"d$FlatMapApiFlips$DoubleFunctionStreamWrapper","c$FlatMapApiFlips$FunctionStreamWrapper":"d$FlatMapApiFlips$FunctionStreamWrapper","c$FlatMapApiFlips$IntFunctionStreamWrapper":"d$FlatMapApiFlips$IntFunctionStreamWrapper","c$FlatMapApiFlips$LongFunctionStreamWrapper":"d$FlatMapApiFlips$LongFunctionStreamWrapper","c$ForEachOps":"d$ForEachOps","c$ForEachOps$ForEachOp":"d$ForEachOps$ForEachOp","c$ForEachOps$ForEachOp$OfDouble":"d$ForEachOps$ForEachOp$OfDouble","c$ForEachOps$ForEachOp$OfInt":"d$ForEachOps$ForEachOp$OfInt","c$ForEachOps$ForEachOp$OfLong":"d$ForEachOps$ForEachOp$OfLong","c$ForEachOps$ForEachOp$OfRef":"d$ForEachOps$ForEachOp$OfRef","c$ForEachOps$ForEachOrderedTask":"d$ForEachOps$ForEachOrderedTask","c$ForEachOps$ForEachTask":"d$ForEachOps$ForEachTask","c$IntPipeline":"d$IntPipeline","c$IntPipeline$1":"d$IntPipeline$1","c$IntPipeline$1$1":"d$IntPipeline$1$1","c$IntPipeline$10":"d$IntPipeline$10","c$IntPipeline$10$1":"d$IntPipeline$10$1","c$IntPipeline$2":"d$IntPipeline$2","c$IntPipeline$2$1":"d$IntPipeline$2$1","c$IntPipeline$3":"d$IntPipeline$3","c$IntPipeline$3$1":"d$IntPipeline$3$1","c$IntPipeline$4":"d$IntPipeline$4","c$IntPipeline$4$1":"d$IntPipeline$4$1","c$IntPipeline$5":"d$IntPipeline$5","c$IntPipeline$5$1":"d$IntPipeline$5$1","c$IntPipeline$6":"d$IntPipeline$6","c$IntPipeline$6$1":"d$IntPipeline$6$1","c$IntPipeline$7":"d$IntPipeline$7","c$IntPipeline$7$1":"d$IntPipeline$7$1","c$IntPipeline$8":"d$IntPipeline$8","c$IntPipeline$9":"d$IntPipeline$9","c$IntPipeline$9$1":"d$IntPipeline$9$1","c$IntPipeline$Head":"d$IntPipeline$Head","c$IntPipeline$StatefulOp":"d$IntPipeline$StatefulOp","c$IntPipeline$StatelessOp":"d$IntPipeline$StatelessOp","c$IntStream":"d$IntStream","c$IntStream$1":"d$IntStream$1","c$IntStream$2":"d$IntStream$2","c$IntStream$Builder":"d$IntStream$Builder","c$LongPipeline":"d$LongPipeline","c$LongPipeline$1":"d$LongPipeline$1","c$LongPipeline$1$1":"d$LongPipeline$1$1","c$LongPipeline$2":"d$LongPipeline$2","c$LongPipeline$2$1":"d$LongPipeline$2$1","c$LongPipeline$3":"d$LongPipeline$3","c$LongPipeline$3$1":"d$LongPipeline$3$1","c$LongPipeline$4":"d$LongPipeline$4","c$LongPipeline$4$1":"d$LongPipeline$4$1","c$LongPipeline$5":"d$LongPipeline$5","c$LongPipeline$5$1":"d$LongPipeline$5$1","c$LongPipeline$6":"d$LongPipeline$6","c$LongPipeline$6$1":"d$LongPipeline$6$1","c$LongPipeline$7":"d$LongPipeline$7","c$LongPipeline$8":"d$LongPipeline$8","c$LongPipeline$8$1":"d$LongPipeline$8$1","c$LongPipeline$9":"d$LongPipeline$9","c$LongPipeline$9$1":"d$LongPipeline$9$1","c$LongPipeline$Head":"d$LongPipeline$Head","c$LongPipeline$StatefulOp":"d$LongPipeline$StatefulOp","c$LongPipeline$StatelessOp":"d$LongPipeline$StatelessOp","c$LongStream":"d$LongStream","c$LongStream$1":"d$LongStream$1","c$LongStream$2":"d$LongStream$2","c$LongStream$Builder":"d$LongStream$Builder","c$MatchOps":"d$MatchOps","c$MatchOps$1MatchSink":"d$MatchOps$1MatchSink","c$MatchOps$2MatchSink":"d$MatchOps$2MatchSink","c$MatchOps$3MatchSink":"d$MatchOps$3MatchSink","c$MatchOps$4MatchSink":"d$MatchOps$4MatchSink","c$MatchOps$BooleanTerminalSink":"d$MatchOps$BooleanTerminalSink","c$MatchOps$MatchKind":"d$MatchOps$MatchKind","c$MatchOps$MatchOp":"d$MatchOps$MatchOp","c$MatchOps$MatchTask":"d$MatchOps$MatchTask","c$Node":"d$Node","c$Node$Builder":"d$Node$Builder","c$Node$Builder$OfDouble":"d$Node$Builder$OfDouble","c$Node$Builder$OfInt":"d$Node$Builder$OfInt","c$Node$Builder$OfLong":"d$Node$Builder$OfLong","c$Node$OfDouble":"d$Node$OfDouble","c$Node$OfInt":"d$Node$OfInt","c$Node$OfLong":"d$Node$OfLong","c$Node$OfPrimitive":"d$Node$OfPrimitive","c$Nodes":"d$Nodes","c$Nodes$1":"d$Nodes$1","c$Nodes$AbstractConcNode":"d$Nodes$AbstractConcNode","c$Nodes$ArrayNode":"d$Nodes$ArrayNode","c$Nodes$CollectionNode":"d$Nodes$CollectionNode","c$Nodes$CollectorTask":"d$Nodes$CollectorTask","c$Nodes$CollectorTask$OfDouble":"d$Nodes$CollectorTask$OfDouble","c$Nodes$CollectorTask$OfInt":"d$Nodes$CollectorTask$OfInt","c$Nodes$CollectorTask$OfLong":"d$Nodes$CollectorTask$OfLong","c$Nodes$CollectorTask$OfRef":"d$Nodes$CollectorTask$OfRef","c$Nodes$ConcNode":"d$Nodes$ConcNode","c$Nodes$ConcNode$OfDouble":"d$Nodes$ConcNode$OfDouble","c$Nodes$ConcNode$OfInt":"d$Nodes$ConcNode$OfInt","c$Nodes$ConcNode$OfLong":"d$Nodes$ConcNode$OfLong","c$Nodes$ConcNode$OfPrimitive":"d$Nodes$ConcNode$OfPrimitive","c$Nodes$DoubleArrayNode":"d$Nodes$DoubleArrayNode","c$Nodes$DoubleFixedNodeBuilder":"d$Nodes$DoubleFixedNodeBuilder","c$Nodes$DoubleSpinedNodeBuilder":"d$Nodes$DoubleSpinedNodeBuilder","c$Nodes$EmptyNode":"d$Nodes$EmptyNode","c$Nodes$EmptyNode$OfDouble":"d$Nodes$EmptyNode$OfDouble","c$Nodes$EmptyNode$OfInt":"d$Nodes$EmptyNode$OfInt","c$Nodes$EmptyNode$OfLong":"d$Nodes$EmptyNode$OfLong","c$Nodes$EmptyNode$OfRef":"d$Nodes$EmptyNode$OfRef","c$Nodes$FixedNodeBuilder":"d$Nodes$FixedNodeBuilder","c$Nodes$IntArrayNode":"d$Nodes$IntArrayNode","c$Nodes$IntFixedNodeBuilder":"d$Nodes$IntFixedNodeBuilder","c$Nodes$IntSpinedNodeBuilder":"d$Nodes$IntSpinedNodeBuilder","c$Nodes$InternalNodeSpliterator":"d$Nodes$InternalNodeSpliterator","c$Nodes$InternalNodeSpliterator$OfDouble":"d$Nodes$InternalNodeSpliterator$OfDouble","c$Nodes$InternalNodeSpliterator$OfInt":"d$Nodes$InternalNodeSpliterator$OfInt","c$Nodes$InternalNodeSpliterator$OfLong":"d$Nodes$InternalNodeSpliterator$OfLong","c$Nodes$InternalNodeSpliterator$OfPrimitive":"d$Nodes$InternalNodeSpliterator$OfPrimitive","c$Nodes$InternalNodeSpliterator$OfRef":"d$Nodes$InternalNodeSpliterator$OfRef","c$Nodes$LongArrayNode":"d$Nodes$LongArrayNode","c$Nodes$LongFixedNodeBuilder":"d$Nodes$LongFixedNodeBuilder","c$Nodes$LongSpinedNodeBuilder":"d$Nodes$LongSpinedNodeBuilder","c$Nodes$SizedCollectorTask":"d$Nodes$SizedCollectorTask","c$Nodes$SizedCollectorTask$OfDouble":"d$Nodes$SizedCollectorTask$OfDouble","c$Nodes$SizedCollectorTask$OfInt":"d$Nodes$SizedCollectorTask$OfInt","c$Nodes$SizedCollectorTask$OfLong":"d$Nodes$SizedCollectorTask$OfLong","c$Nodes$SizedCollectorTask$OfRef":"d$Nodes$SizedCollectorTask$OfRef","c$Nodes$SpinedNodeBuilder":"d$Nodes$SpinedNodeBuilder","c$Nodes$ToArrayTask":"d$Nodes$ToArrayTask","c$Nodes$ToArrayTask$OfDouble":"d$Nodes$ToArrayTask$OfDouble","c$Nodes$ToArrayTask$OfInt":"d$Nodes$ToArrayTask$OfInt","c$Nodes$ToArrayTask$OfLong":"d$Nodes$ToArrayTask$OfLong","c$Nodes$ToArrayTask$OfPrimitive":"d$Nodes$ToArrayTask$OfPrimitive","c$Nodes$ToArrayTask$OfRef":"d$Nodes$ToArrayTask$OfRef","c$PipelineHelper":"d$PipelineHelper","c$ReduceOps":"d$ReduceOps","c$ReduceOps$1":"d$ReduceOps$1","c$ReduceOps$10":"d$ReduceOps$10","c$ReduceOps$10ReducingSink":"d$ReduceOps$10ReducingSink","c$ReduceOps$11":"d$ReduceOps$11","c$ReduceOps$11ReducingSink":"d$ReduceOps$11ReducingSink","c$ReduceOps$12":"d$ReduceOps$12","c$ReduceOps$12ReducingSink":"d$ReduceOps$12ReducingSink","c$ReduceOps$13":"d$ReduceOps$13","c$ReduceOps$13ReducingSink":"d$ReduceOps$13ReducingSink","c$ReduceOps$14":"d$ReduceOps$14","c$ReduceOps$15":"d$ReduceOps$15","c$ReduceOps$16":"d$ReduceOps$16","c$ReduceOps$17":"d$ReduceOps$17","c$ReduceOps$1ReducingSink":"d$ReduceOps$1ReducingSink","c$ReduceOps$2":"d$ReduceOps$2","c$ReduceOps$2ReducingSink":"d$ReduceOps$2ReducingSink","c$ReduceOps$3":"d$ReduceOps$3","c$ReduceOps$3ReducingSink":"d$ReduceOps$3ReducingSink","c$ReduceOps$4":"d$ReduceOps$4","c$ReduceOps$4ReducingSink":"d$ReduceOps$4ReducingSink","c$ReduceOps$5":"d$ReduceOps$5","c$ReduceOps$5ReducingSink":"d$ReduceOps$5ReducingSink","c$ReduceOps$6":"d$ReduceOps$6","c$ReduceOps$6ReducingSink":"d$ReduceOps$6ReducingSink","c$ReduceOps$7":"d$ReduceOps$7","c$ReduceOps$7ReducingSink":"d$ReduceOps$7ReducingSink","c$ReduceOps$8":"d$ReduceOps$8","c$ReduceOps$8ReducingSink":"d$ReduceOps$8ReducingSink","c$ReduceOps$9":"d$ReduceOps$9","c$ReduceOps$9ReducingSink":"d$ReduceOps$9ReducingSink","c$ReduceOps$AccumulatingSink":"d$ReduceOps$AccumulatingSink","c$ReduceOps$Box":"d$ReduceOps$Box","c$ReduceOps$CountingSink":"d$ReduceOps$CountingSink","c$ReduceOps$CountingSink$OfDouble":"d$ReduceOps$CountingSink$OfDouble","c$ReduceOps$CountingSink$OfInt":"d$ReduceOps$CountingSink$OfInt","c$ReduceOps$CountingSink$OfLong":"d$ReduceOps$CountingSink$OfLong","c$ReduceOps$CountingSink$OfRef":"d$ReduceOps$CountingSink$OfRef","c$ReduceOps$ReduceOp":"d$ReduceOps$ReduceOp","c$ReduceOps$ReduceTask":"d$ReduceOps$ReduceTask","c$ReferencePipeline":"d$ReferencePipeline","c$ReferencePipeline$1":"d$ReferencePipeline$1","c$ReferencePipeline$10":"d$ReferencePipeline$10","c$ReferencePipeline$10$1":"d$ReferencePipeline$10$1","c$ReferencePipeline$11":"d$ReferencePipeline$11","c$ReferencePipeline$11$1":"d$ReferencePipeline$11$1","c$ReferencePipeline$2":"d$ReferencePipeline$2","c$ReferencePipeline$2$1":"d$ReferencePipeline$2$1","c$ReferencePipeline$3":"d$ReferencePipeline$3","c$ReferencePipeline$3$1":"d$ReferencePipeline$3$1","c$ReferencePipeline$4":"d$ReferencePipeline$4","c$ReferencePipeline$4$1":"d$ReferencePipeline$4$1","c$ReferencePipeline$5":"d$ReferencePipeline$5","c$ReferencePipeline$5$1":"d$ReferencePipeline$5$1","c$ReferencePipeline$6":"d$ReferencePipeline$6","c$ReferencePipeline$6$1":"d$ReferencePipeline$6$1","c$ReferencePipeline$7":"d$ReferencePipeline$7","c$ReferencePipeline$7$1":"d$ReferencePipeline$7$1","c$ReferencePipeline$8":"d$ReferencePipeline$8","c$ReferencePipeline$8$1":"d$ReferencePipeline$8$1","c$ReferencePipeline$9":"d$ReferencePipeline$9","c$ReferencePipeline$9$1":"d$ReferencePipeline$9$1","c$ReferencePipeline$Head":"d$ReferencePipeline$Head","c$ReferencePipeline$StatefulOp":"d$ReferencePipeline$StatefulOp","c$ReferencePipeline$StatelessOp":"d$ReferencePipeline$StatelessOp","c$Sink":"d$Sink","c$Sink$ChainedDouble":"d$Sink$ChainedDouble","c$Sink$ChainedInt":"d$Sink$ChainedInt","c$Sink$ChainedLong":"d$Sink$ChainedLong","c$Sink$ChainedReference":"d$Sink$ChainedReference","c$Sink$OfDouble":"d$Sink$OfDouble","c$Sink$OfInt":"d$Sink$OfInt","c$Sink$OfLong":"d$Sink$OfLong","c$SliceOps":"d$SliceOps","c$SliceOps$1":"d$SliceOps$1","c$SliceOps$1$1":"d$SliceOps$1$1","c$SliceOps$2":"d$SliceOps$2","c$SliceOps$2$1":"d$SliceOps$2$1","c$SliceOps$3":"d$SliceOps$3","c$SliceOps$3$1":"d$SliceOps$3$1","c$SliceOps$4":"d$SliceOps$4","c$SliceOps$4$1":"d$SliceOps$4$1","c$SliceOps$5":"d$SliceOps$5","c$SliceOps$SliceTask":"d$SliceOps$SliceTask","c$SortedOps":"d$SortedOps","c$SortedOps$AbstractDoubleSortingSink":"d$SortedOps$AbstractDoubleSortingSink","c$SortedOps$AbstractIntSortingSink":"d$SortedOps$AbstractIntSortingSink","c$SortedOps$AbstractLongSortingSink":"d$SortedOps$AbstractLongSortingSink","c$SortedOps$AbstractRefSortingSink":"d$SortedOps$AbstractRefSortingSink","c$SortedOps$DoubleSortingSink":"d$SortedOps$DoubleSortingSink","c$SortedOps$IntSortingSink":"d$SortedOps$IntSortingSink","c$SortedOps$LongSortingSink":"d$SortedOps$LongSortingSink","c$SortedOps$OfDouble":"d$SortedOps$OfDouble","c$SortedOps$OfInt":"d$SortedOps$OfInt","c$SortedOps$OfLong":"d$SortedOps$OfLong","c$SortedOps$OfRef":"d$SortedOps$OfRef","c$SortedOps$RefSortingSink":"d$SortedOps$RefSortingSink","c$SortedOps$SizedDoubleSortingSink":"d$SortedOps$SizedDoubleSortingSink","c$SortedOps$SizedIntSortingSink":"d$SortedOps$SizedIntSortingSink","c$SortedOps$SizedLongSortingSink":"d$SortedOps$SizedLongSortingSink","c$SortedOps$SizedRefSortingSink":"d$SortedOps$SizedRefSortingSink","c$SpinedBuffer":"d$SpinedBuffer","c$SpinedBuffer$1Splitr":"d$SpinedBuffer$1Splitr","c$SpinedBuffer$OfDouble":"d$SpinedBuffer$OfDouble","c$SpinedBuffer$OfDouble$1Splitr":"d$SpinedBuffer$OfDouble$1Splitr","c$SpinedBuffer$OfInt":"d$SpinedBuffer$OfInt","c$SpinedBuffer$OfInt$1Splitr":"d$SpinedBuffer$OfInt$1Splitr","c$SpinedBuffer$OfLong":"d$SpinedBuffer$OfLong","c$SpinedBuffer$OfLong$1Splitr":"d$SpinedBuffer$OfLong$1Splitr","c$SpinedBuffer$OfPrimitive":"d$SpinedBuffer$OfPrimitive","c$SpinedBuffer$OfPrimitive$BaseSpliterator":"d$SpinedBuffer$OfPrimitive$BaseSpliterator","c$StackWalkerApiFlips":"d$StackWalkerApiFlips","c$StackWalkerApiFlips$FunctionStreamWrapper":"d$StackWalkerApiFlips$FunctionStreamWrapper","c$Stream":"d$Stream","c$Stream$1":"d$Stream$1","c$Stream$2":"d$Stream$2","c$Stream$Builder":"d$Stream$Builder","c$StreamApiFlips":"d$StreamApiFlips","c$StreamOpFlag":"d$StreamOpFlag","c$StreamOpFlag$MaskBuilder":"d$StreamOpFlag$MaskBuilder","c$StreamOpFlag$Type":"d$StreamOpFlag$Type","c$StreamShape":"d$StreamShape","c$StreamSpliterators":"d$StreamSpliterators","c$StreamSpliterators$AbstractWrappingSpliterator":"d$StreamSpliterators$AbstractWrappingSpliterator","c$StreamSpliterators$ArrayBuffer":"d$StreamSpliterators$ArrayBuffer","c$StreamSpliterators$ArrayBuffer$OfDouble":"d$StreamSpliterators$ArrayBuffer$OfDouble","c$StreamSpliterators$ArrayBuffer$OfInt":"d$StreamSpliterators$ArrayBuffer$OfInt","c$StreamSpliterators$ArrayBuffer$OfLong":"d$StreamSpliterators$ArrayBuffer$OfLong","c$StreamSpliterators$ArrayBuffer$OfPrimitive":"d$StreamSpliterators$ArrayBuffer$OfPrimitive","c$StreamSpliterators$ArrayBuffer$OfRef":"d$StreamSpliterators$ArrayBuffer$OfRef","c$StreamSpliterators$DelegatingSpliterator":"d$StreamSpliterators$DelegatingSpliterator","c$StreamSpliterators$DelegatingSpliterator$OfDouble":"d$StreamSpliterators$DelegatingSpliterator$OfDouble","c$StreamSpliterators$DelegatingSpliterator$OfInt":"d$StreamSpliterators$DelegatingSpliterator$OfInt","c$StreamSpliterators$DelegatingSpliterator$OfLong":"d$StreamSpliterators$DelegatingSpliterator$OfLong","c$StreamSpliterators$DelegatingSpliterator$OfPrimitive":"d$StreamSpliterators$DelegatingSpliterator$OfPrimitive","c$StreamSpliterators$DistinctSpliterator":"d$StreamSpliterators$DistinctSpliterator","c$StreamSpliterators$DoubleWrappingSpliterator":"d$StreamSpliterators$DoubleWrappingSpliterator","c$StreamSpliterators$InfiniteSupplyingSpliterator":"d$StreamSpliterators$InfiniteSupplyingSpliterator","c$StreamSpliterators$InfiniteSupplyingSpliterator$OfDouble":"d$StreamSpliterators$InfiniteSupplyingSpliterator$OfDouble","c$StreamSpliterators$InfiniteSupplyingSpliterator$OfInt":"d$StreamSpliterators$InfiniteSupplyingSpliterator$OfInt","c$StreamSpliterators$InfiniteSupplyingSpliterator$OfLong":"d$StreamSpliterators$InfiniteSupplyingSpliterator$OfLong","c$StreamSpliterators$InfiniteSupplyingSpliterator$OfRef":"d$StreamSpliterators$InfiniteSupplyingSpliterator$OfRef","c$StreamSpliterators$IntWrappingSpliterator":"d$StreamSpliterators$IntWrappingSpliterator","c$StreamSpliterators$LongWrappingSpliterator":"d$StreamSpliterators$LongWrappingSpliterator","c$StreamSpliterators$SliceSpliterator":"d$StreamSpliterators$SliceSpliterator","c$StreamSpliterators$SliceSpliterator$OfDouble":"d$StreamSpliterators$SliceSpliterator$OfDouble","c$StreamSpliterators$SliceSpliterator$OfInt":"d$StreamSpliterators$SliceSpliterator$OfInt","c$StreamSpliterators$SliceSpliterator$OfLong":"d$StreamSpliterators$SliceSpliterator$OfLong","c$StreamSpliterators$SliceSpliterator$OfPrimitive":"d$StreamSpliterators$SliceSpliterator$OfPrimitive","c$StreamSpliterators$SliceSpliterator$OfRef":"d$StreamSpliterators$SliceSpliterator$OfRef","c$StreamSpliterators$UnorderedSliceSpliterator":"d$StreamSpliterators$UnorderedSliceSpliterator","c$StreamSpliterators$UnorderedSliceSpliterator$OfDouble":"d$StreamSpliterators$UnorderedSliceSpliterator$OfDouble","c$StreamSpliterators$UnorderedSliceSpliterator$OfInt":"d$StreamSpliterators$UnorderedSliceSpliterator$OfInt","c$StreamSpliterators$UnorderedSliceSpliterator$OfLong":"d$StreamSpliterators$UnorderedSliceSpliterator$OfLong","c$StreamSpliterators$UnorderedSliceSpliterator$OfPrimitive":"d$StreamSpliterators$UnorderedSliceSpliterator$OfPrimitive","c$StreamSpliterators$UnorderedSliceSpliterator$OfRef":"d$StreamSpliterators$UnorderedSliceSpliterator$OfRef","c$StreamSpliterators$UnorderedSliceSpliterator$PermitStatus":"d$StreamSpliterators$UnorderedSliceSpliterator$PermitStatus","c$StreamSpliterators$WrappingSpliterator":"d$StreamSpliterators$WrappingSpliterator","c$StreamSupport":"d$StreamSupport","c$Streams":"d$Streams","c$Streams$1":"d$Streams$1","c$Streams$2":"d$Streams$2","c$Streams$AbstractStreamBuilderImpl":"d$Streams$AbstractStreamBuilderImpl","c$Streams$ConcatSpliterator":"d$Streams$ConcatSpliterator","c$Streams$ConcatSpliterator$OfDouble":"d$Streams$ConcatSpliterator$OfDouble","c$Streams$ConcatSpliterator$OfInt":"d$Streams$ConcatSpliterator$OfInt","c$Streams$ConcatSpliterator$OfLong":"d$Streams$ConcatSpliterator$OfLong","c$Streams$ConcatSpliterator$OfPrimitive":"d$Streams$ConcatSpliterator$OfPrimitive","c$Streams$ConcatSpliterator$OfRef":"d$Streams$ConcatSpliterator$OfRef","c$Streams$DoubleStreamBuilderImpl":"d$Streams$DoubleStreamBuilderImpl","c$Streams$IntStreamBuilderImpl":"d$Streams$IntStreamBuilderImpl","c$Streams$LongStreamBuilderImpl":"d$Streams$LongStreamBuilderImpl","c$Streams$RangeIntSpliterator":"d$Streams$RangeIntSpliterator","c$Streams$RangeLongSpliterator":"d$Streams$RangeLongSpliterator","c$Streams$StreamBuilderImpl":"d$Streams$StreamBuilderImpl","c$TerminalOp":"d$TerminalOp","c$TerminalSink":"d$TerminalSink","c$Tripwire":"d$Tripwire","c$WhileOps":"d$WhileOps","c$WhileOps$1":"d$WhileOps$1","c$WhileOps$1$1":"d$WhileOps$1$1","c$WhileOps$1Op":"d$WhileOps$1Op","c$WhileOps$1Op$1OpSink":"d$WhileOps$1Op$1OpSink","c$WhileOps$2":"d$WhileOps$2","c$WhileOps$2$1":"d$WhileOps$2$1","c$WhileOps$2Op":"d$WhileOps$2Op","c$WhileOps$2Op$1OpSink":"d$WhileOps$2Op$1OpSink","c$WhileOps$3":"d$WhileOps$3","c$WhileOps$3$1":"d$WhileOps$3$1","c$WhileOps$3Op":"d$WhileOps$3Op","c$WhileOps$3Op$1OpSink":"d$WhileOps$3Op$1OpSink","c$WhileOps$4":"d$WhileOps$4","c$WhileOps$4$1":"d$WhileOps$4$1","c$WhileOps$4Op":"d$WhileOps$4Op","c$WhileOps$4Op$1OpSink":"d$WhileOps$4Op$1OpSink","c$WhileOps$DropWhileOp":"d$WhileOps$DropWhileOp","c$WhileOps$DropWhileSink":"d$WhileOps$DropWhileSink","c$WhileOps$DropWhileTask":"d$WhileOps$DropWhileTask","c$WhileOps$TakeWhileTask":"d$WhileOps$TakeWhileTask","c$WhileOps$UnorderedWhileSpliterator":"d$WhileOps$UnorderedWhileSpliterator","c$WhileOps$UnorderedWhileSpliterator$OfDouble":"d$WhileOps$UnorderedWhileSpliterator$OfDouble","c$WhileOps$UnorderedWhileSpliterator$OfDouble$Dropping":"d$WhileOps$UnorderedWhileSpliterator$OfDouble$Dropping","c$WhileOps$UnorderedWhileSpliterator$OfDouble$Taking":"d$WhileOps$UnorderedWhileSpliterator$OfDouble$Taking","c$WhileOps$UnorderedWhileSpliterator$OfInt":"d$WhileOps$UnorderedWhileSpliterator$OfInt","c$WhileOps$UnorderedWhileSpliterator$OfInt$Dropping":"d$WhileOps$UnorderedWhileSpliterator$OfInt$Dropping","c$WhileOps$UnorderedWhileSpliterator$OfInt$Taking":"d$WhileOps$UnorderedWhileSpliterator$OfInt$Taking","c$WhileOps$UnorderedWhileSpliterator$OfLong":"d$WhileOps$UnorderedWhileSpliterator$OfLong","c$WhileOps$UnorderedWhileSpliterator$OfLong$Dropping":"d$WhileOps$UnorderedWhileSpliterator$OfLong$Dropping","c$WhileOps$UnorderedWhileSpliterator$OfLong$Taking":"d$WhileOps$UnorderedWhileSpliterator$OfLong$Taking","c$WhileOps$UnorderedWhileSpliterator$OfRef":"d$WhileOps$UnorderedWhileSpliterator$OfRef","c$WhileOps$UnorderedWhileSpliterator$OfRef$Dropping":"d$WhileOps$UnorderedWhileSpliterator$OfRef$Dropping","c$WhileOps$UnorderedWhileSpliterator$OfRef$Taking":"d$WhileOps$UnorderedWhileSpliterator$OfRef$Taking","g$ConcurrentHashMap":"h$ConcurrentHashMap","g$ConcurrentHashMap$BaseIterator":"h$ConcurrentHashMap$BaseIterator","g$ConcurrentHashMap$BulkTask":"h$ConcurrentHashMap$BulkTask","g$ConcurrentHashMap$CollectionView":"h$ConcurrentHashMap$CollectionView","g$ConcurrentHashMap$CounterCell":"h$ConcurrentHashMap$CounterCell","g$ConcurrentHashMap$EntryIterator":"h$ConcurrentHashMap$EntryIterator","g$ConcurrentHashMap$EntrySetView":"h$ConcurrentHashMap$EntrySetView","g$ConcurrentHashMap$EntrySpliterator":"h$ConcurrentHashMap$EntrySpliterator","g$ConcurrentHashMap$ForEachEntryTask":"h$ConcurrentHashMap$ForEachEntryTask","g$ConcurrentHashMap$ForEachKeyTask":"h$ConcurrentHashMap$ForEachKeyTask","g$ConcurrentHashMap$ForEachMappingTask":"h$ConcurrentHashMap$ForEachMappingTask","g$ConcurrentHashMap$ForEachTransformedEntryTask":"h$ConcurrentHashMap$ForEachTransformedEntryTask","g$ConcurrentHashMap$ForEachTransformedKeyTask":"h$ConcurrentHashMap$ForEachTransformedKeyTask","g$ConcurrentHashMap$ForEachTransformedMappingTask":"h$ConcurrentHashMap$ForEachTransformedMappingTask","g$ConcurrentHashMap$ForEachTransformedValueTask":"h$ConcurrentHashMap$ForEachTransformedValueTask","g$ConcurrentHashMap$ForEachValueTask":"h$ConcurrentHashMap$ForEachValueTask","g$ConcurrentHashMap$ForwardingNode":"h$ConcurrentHashMap$ForwardingNode","g$ConcurrentHashMap$KeyIterator":"h$ConcurrentHashMap$KeyIterator","g$ConcurrentHashMap$KeySetView":"h$ConcurrentHashMap$KeySetView","g$ConcurrentHashMap$KeySpliterator":"h$ConcurrentHashMap$KeySpliterator","g$ConcurrentHashMap$MapEntry":"h$ConcurrentHashMap$MapEntry","g$ConcurrentHashMap$MapReduceEntriesTask":"h$ConcurrentHashMap$MapReduceEntriesTask","g$ConcurrentHashMap$MapReduceEntriesToDoubleTask":"h$ConcurrentHashMap$MapReduceEntriesToDoubleTask","g$ConcurrentHashMap$MapReduceEntriesToIntTask":"h$ConcurrentHashMap$MapReduceEntriesToIntTask","g$ConcurrentHashMap$MapReduceEntriesToLongTask":"h$ConcurrentHashMap$MapReduceEntriesToLongTask","g$ConcurrentHashMap$MapReduceKeysTask":"h$ConcurrentHashMap$MapReduceKeysTask","g$ConcurrentHashMap$MapReduceKeysToDoubleTask":"h$ConcurrentHashMap$MapReduceKeysToDoubleTask","g$ConcurrentHashMap$MapReduceKeysToIntTask":"h$ConcurrentHashMap$MapReduceKeysToIntTask","g$ConcurrentHashMap$MapReduceKeysToLongTask":"h$ConcurrentHashMap$MapReduceKeysToLongTask","g$ConcurrentHashMap$MapReduceMappingsTask":"h$ConcurrentHashMap$MapReduceMappingsTask","g$ConcurrentHashMap$MapReduceMappingsToDoubleTask":"h$ConcurrentHashMap$MapReduceMappingsToDoubleTask","g$ConcurrentHashMap$MapReduceMappingsToIntTask":"h$ConcurrentHashMap$MapReduceMappingsToIntTask","g$ConcurrentHashMap$MapReduceMappingsToLongTask":"h$ConcurrentHashMap$MapReduceMappingsToLongTask","g$ConcurrentHashMap$MapReduceValuesTask":"h$ConcurrentHashMap$MapReduceValuesTask","g$ConcurrentHashMap$MapReduceValuesToDoubleTask":"h$ConcurrentHashMap$MapReduceValuesToDoubleTask","g$ConcurrentHashMap$MapReduceValuesToIntTask":"h$ConcurrentHashMap$MapReduceValuesToIntTask","g$ConcurrentHashMap$MapReduceValuesToLongTask":"h$ConcurrentHashMap$MapReduceValuesToLongTask","g$ConcurrentHashMap$Node":"h$ConcurrentHashMap$Node","g$ConcurrentHashMap$ReduceEntriesTask":"h$ConcurrentHashMap$ReduceEntriesTask","g$ConcurrentHashMap$ReduceKeysTask":"h$ConcurrentHashMap$ReduceKeysTask","g$ConcurrentHashMap$ReduceValuesTask":"h$ConcurrentHashMap$ReduceValuesTask","g$ConcurrentHashMap$ReservationNode":"h$ConcurrentHashMap$ReservationNode","g$ConcurrentHashMap$SearchEntriesTask":"h$ConcurrentHashMap$SearchEntriesTask","g$ConcurrentHashMap$SearchKeysTask":"h$ConcurrentHashMap$SearchKeysTask","g$ConcurrentHashMap$SearchMappingsTask":"h$ConcurrentHashMap$SearchMappingsTask","g$ConcurrentHashMap$SearchValuesTask":"h$ConcurrentHashMap$SearchValuesTask","g$ConcurrentHashMap$Segment":"h$ConcurrentHashMap$Segment","g$ConcurrentHashMap$TableStack":"h$ConcurrentHashMap$TableStack","g$ConcurrentHashMap$Traverser":"h$ConcurrentHashMap$Traverser","g$ConcurrentHashMap$TreeBin":"h$ConcurrentHashMap$TreeBin","g$ConcurrentHashMap$TreeNode":"h$ConcurrentHashMap$TreeNode","g$ConcurrentHashMap$ValueIterator":"h$ConcurrentHashMap$ValueIterator","g$ConcurrentHashMap$ValueSpliterator":"h$ConcurrentHashMap$ValueSpliterator","g$ConcurrentHashMap$ValuesView":"h$ConcurrentHashMap$ValuesView","g$ThreadLocalRandom":"h$ThreadLocalRandom","g$ThreadLocalRandom$1":"h$ThreadLocalRandom$1","g$ThreadLocalRandom$2":"h$ThreadLocalRandom$2","g$ThreadLocalRandom$RandomDoublesSpliterator":"h$ThreadLocalRandom$RandomDoublesSpliterator","g$ThreadLocalRandom$RandomIntsSpliterator":"h$ThreadLocalRandom$RandomIntsSpliterator","g$ThreadLocalRandom$RandomLongsSpliterator":"h$ThreadLocalRandom$RandomLongsSpliterator","q$DoubleSummaryStatistics":"r$DoubleSummaryStatistics","q$DoubleSummaryStatisticsConversions":"r$DoubleSummaryStatisticsConversions","q$IntSummaryStatistics":"r$IntSummaryStatistics","q$IntSummaryStatisticsConversions":"r$IntSummaryStatisticsConversions","q$LongSummaryStatistics":"r$LongSummaryStatistics","q$LongSummaryStatisticsConversions":"r$LongSummaryStatisticsConversions","q$Objects":"r$Objects","q$Optional":"r$Optional","q$OptionalConversions":"r$OptionalConversions","q$OptionalDouble":"r$OptionalDouble","q$OptionalInt":"r$OptionalInt","q$OptionalLong":"r$OptionalLong","q$PrimitiveIterator":"r$PrimitiveIterator","q$PrimitiveIterator$OfDouble":"r$PrimitiveIterator$OfDouble","q$PrimitiveIterator$OfInt":"r$PrimitiveIterator$OfInt","q$PrimitiveIterator$OfLong":"r$PrimitiveIterator$OfLong","q$Spliterator":"r$Spliterator","q$Spliterator$OfDouble":"r$Spliterator$OfDouble","q$Spliterator$OfInt":"r$Spliterator$OfInt","q$Spliterator$OfLong":"r$Spliterator$OfLong","q$Spliterator$OfPrimitive":"r$Spliterator$OfPrimitive","q$Spliterators":"r$Spliterators","q$Spliterators$1Adapter":"r$Spliterators$1Adapter","q$Spliterators$2Adapter":"r$Spliterators$2Adapter","q$Spliterators$3Adapter":"r$Spliterators$3Adapter","q$Spliterators$4Adapter":"r$Spliterators$4Adapter","q$Spliterators$AbstractDoubleSpliterator":"r$Spliterators$AbstractDoubleSpliterator","q$Spliterators$AbstractDoubleSpliterator$HoldingDoubleConsumer":"r$Spliterators$AbstractDoubleSpliterator$HoldingDoubleConsumer","q$Spliterators$AbstractIntSpliterator":"r$Spliterators$AbstractIntSpliterator","q$Spliterators$AbstractIntSpliterator$HoldingIntConsumer":"r$Spliterators$AbstractIntSpliterator$HoldingIntConsumer","q$Spliterators$AbstractLongSpliterator":"r$Spliterators$AbstractLongSpliterator","q$Spliterators$AbstractLongSpliterator$HoldingLongConsumer":"r$Spliterators$AbstractLongSpliterator$HoldingLongConsumer","q$Spliterators$AbstractSpliterator":"r$Spliterators$AbstractSpliterator","q$Spliterators$AbstractSpliterator$HoldingConsumer":"r$Spliterators$AbstractSpliterator$HoldingConsumer","q$Spliterators$ArraySpliterator":"r$Spliterators$ArraySpliterator","q$Spliterators$DoubleArraySpliterator":"r$Spliterators$DoubleArraySpliterator","q$Spliterators$DoubleIteratorSpliterator":"r$Spliterators$DoubleIteratorSpliterator","q$Spliterators$EmptySpliterator":"r$Spliterators$EmptySpliterator","q$Spliterators$EmptySpliterator$OfDouble":"r$Spliterators$EmptySpliterator$OfDouble","q$Spliterators$EmptySpliterator$OfInt":"r$Spliterators$EmptySpliterator$OfInt","q$Spliterators$EmptySpliterator$OfLong":"r$Spliterators$EmptySpliterator$OfLong","q$Spliterators$EmptySpliterator$OfRef":"r$Spliterators$EmptySpliterator$OfRef","q$Spliterators$IntArraySpliterator":"r$Spliterators$IntArraySpliterator","q$Spliterators$IntIteratorSpliterator":"r$Spliterators$IntIteratorSpliterator","q$Spliterators$IteratorSpliterator":"r$Spliterators$IteratorSpliterator","q$Spliterators$LongArraySpliterator":"r$Spliterators$LongArraySpliterator","q$Spliterators$LongIteratorSpliterator":"r$Spliterators$LongIteratorSpliterator","q$StringJoiner":"r$StringJoiner","s$DesugarAtomicInteger":"t$DesugarAtomicInteger","s$DesugarAtomicLong":"t$DesugarAtomicLong","s$DesugarAtomicReference":"t$DesugarAtomicReference","u$DesugarBufferedReader":"v$DesugarBufferedReader","u$DesugarBufferedReaderLinesIterator":"v$DesugarBufferedReaderLinesIterator"},"maintain_type":["f$BiConsumer","f$BiFunction","f$BiPredicate","f$BinaryOperator","f$BooleanSupplier","f$Consumer","f$DoubleBinaryOperator","f$DoubleConsumer","f$DoubleFunction","f$DoublePredicate","f$DoubleSupplier","f$DoubleToIntFunction","f$DoubleToLongFunction","f$DoubleUnaryOperator","f$Function","f$IntBinaryOperator","f$IntConsumer","f$IntFunction","f$IntPredicate","f$IntSupplier","f$IntToDoubleFunction","f$IntToLongFunction","f$IntUnaryOperator","f$LongBinaryOperator","f$LongConsumer","f$LongFunction","f$LongPredicate","f$LongSupplier","f$LongToDoubleFunction","f$LongToIntFunction","f$LongUnaryOperator","f$ObjDoubleConsumer","f$ObjIntConsumer","f$ObjLongConsumer","f$Predicate","f$Supplier","f$ToDoubleBiFunction","f$ToDoubleFunction","f$ToIntBiFunction","f$ToIntFunction","f$ToLongBiFunction","f$ToLongFunction","f$UnaryOperator","u$UncheckedIOException"],"rewrite_derived_type_only":{"e$Iterable":"x$Iterable","f$BiConsumer":"w$BiConsumer","f$BiFunction":"w$BiFunction","f$BiPredicate":"w$BiPredicate","f$BinaryOperator":"w$BinaryOperator","f$BooleanSupplier":"w$BooleanSupplier","f$Consumer":"w$Consumer","f$DoubleBinaryOperator":"w$DoubleBinaryOperator","f$DoubleConsumer":"w$DoubleConsumer","f$DoubleFunction":"w$DoubleFunction","f$DoublePredicate":"w$DoublePredicate","f$DoubleSupplier":"w$DoubleSupplier","f$DoubleToIntFunction":"w$DoubleToIntFunction","f$DoubleToLongFunction":"w$DoubleToLongFunction","f$DoubleUnaryOperator":"w$DoubleUnaryOperator","f$Function":"w$Function","f$IntBinaryOperator":"w$IntBinaryOperator","f$IntConsumer":"w$IntConsumer","f$IntFunction":"w$IntFunction","f$IntPredicate":"w$IntPredicate","f$IntSupplier":"w$IntSupplier","f$IntToDoubleFunction":"w$IntToDoubleFunction","f$IntToLongFunction":"w$IntToLongFunction","f$IntUnaryOperator":"w$IntUnaryOperator","f$LongBinaryOperator":"w$LongBinaryOperator","f$LongConsumer":"w$LongConsumer","f$LongFunction":"w$LongFunction","f$LongPredicate":"w$LongPredicate","f$LongSupplier":"w$LongSupplier","f$LongToDoubleFunction":"w$LongToDoubleFunction","f$LongToIntFunction":"w$LongToIntFunction","f$LongUnaryOperator":"w$LongUnaryOperator","f$ObjDoubleConsumer":"w$ObjDoubleConsumer","f$ObjIntConsumer":"w$ObjIntConsumer","f$ObjLongConsumer":"w$ObjLongConsumer","f$Predicate":"w$Predicate","f$Supplier":"w$Supplier","f$ToDoubleBiFunction":"w$ToDoubleBiFunction","f$ToDoubleFunction":"w$ToDoubleFunction","f$ToIntBiFunction":"w$ToIntBiFunction","f$ToIntFunction":"w$ToIntFunction","f$ToLongBiFunction":"w$ToLongBiFunction","f$ToLongFunction":"w$ToLongFunction","f$UnaryOperator":"w$UnaryOperator","g$ConcurrentMap":"h$ConcurrentMap","q$Collection":"r$Collection","q$Comparator":"r$Comparator","q$Iterator":"r$Iterator","q$LinkedHashSet":"r$LinkedHashSet","q$List":"r$List","q$Map":"r$Map","q$Map$Entry":"r$Map$Entry","q$Set":"r$Set","q$SortedSet":"r$SortedSet","u$BufferedReader":"v$BufferedReader","u$UncheckedIOException":"v$UncheckedIOException"},"static_retarget":{"c$DoubleStream q$Arrays#stream(double[])":"c$DoubleStream q$DesugarArrays#stream(double[])","c$DoubleStream q$Arrays#stream(double[], int, int)":"c$DoubleStream q$DesugarArrays#stream(double[], int, int)","c$IntStream q$Arrays#stream(int[])":"c$IntStream q$DesugarArrays#stream(int[])","c$IntStream q$Arrays#stream(int[], int, int)":"c$IntStream q$DesugarArrays#stream(int[], int, int)","c$LongStream q$Arrays#stream(long[])":"c$LongStream q$DesugarArrays#stream(long[])","c$LongStream q$Arrays#stream(long[], int, int)":"c$LongStream q$DesugarArrays#stream(long[], int, int)","c$Stream q$Arrays#stream(e$Object[])":"c$Stream q$DesugarArrays#stream(e$Object[])","c$Stream q$Arrays#stream(e$Object[], int, int)":"c$Stream q$DesugarArrays#stream(e$Object[], int, int)","q$Spliterator q$Arrays#spliterator(e$Object[])":"q$Spliterator q$DesugarArrays#spliterator(e$Object[])","q$Spliterator q$Arrays#spliterator(e$Object[], int, int)":"q$Spliterator q$DesugarArrays#spliterator(e$Object[], int, int)","q$Spliterator$OfDouble q$Arrays#spliterator(double[])":"q$Spliterator$OfDouble q$DesugarArrays#spliterator(double[])","q$Spliterator$OfDouble q$Arrays#spliterator(double[], int, int)":"q$Spliterator$OfDouble q$DesugarArrays#spliterator(double[], int, int)","q$Spliterator$OfInt q$Arrays#spliterator(int[])":"q$Spliterator$OfInt q$DesugarArrays#spliterator(int[])","q$Spliterator$OfInt q$Arrays#spliterator(int[], int, int)":"q$Spliterator$OfInt q$DesugarArrays#spliterator(int[], int, int)","q$Spliterator$OfLong q$Arrays#spliterator(long[])":"q$Spliterator$OfLong q$DesugarArrays#spliterator(long[])","q$Spliterator$OfLong q$Arrays#spliterator(long[], int, int)":"q$Spliterator$OfLong q$DesugarArrays#spliterator(long[], int, int)"},"emulated_virtual_retarget":{"c$Stream u$BufferedReader#lines()":[["c$Stream u$BufferedReader#lines()","11"],["c$Stream u$BufferedReader#lines()","10"],["c$Stream u$DesugarBufferedReader#lines(u$BufferedReader)","-1"],{}]},"emulated_virtual_retarget_through_emulated_interface":{"q$Spliterator q$LinkedHashSet#spliterator()":"q$Spliterator q$DesugarLinkedHashSet#spliterator(q$LinkedHashSet)"},"api_generic_types_conversion":{"c$DoubleStream c$DoubleStream#flatMap(f$DoubleFunction)":["f$DoubleFunction c$FlatMapApiFlips#flipFunctionReturningStream(f$DoubleFunction)",""],"c$DoubleStream c$Stream#flatMapToDouble(f$Function)":["f$Function c$FlatMapApiFlips#flipFunctionReturningStream(f$Function)",""],"c$IntStream c$IntStream#flatMap(f$IntFunction)":["f$IntFunction c$FlatMapApiFlips#flipFunctionReturningStream(f$IntFunction)",""],"c$IntStream c$Stream#flatMapToInt(f$Function)":["f$Function c$FlatMapApiFlips#flipFunctionReturningStream(f$Function)",""],"c$LongStream c$LongStream#flatMap(f$LongFunction)":["f$LongFunction c$FlatMapApiFlips#flipFunctionReturningStream(f$LongFunction)",""],"c$LongStream c$Stream#flatMapToLong(f$Function)":["f$Function c$FlatMapApiFlips#flipFunctionReturningStream(f$Function)",""],"c$Stream c$Stream#flatMap(f$Function)":["f$Function c$FlatMapApiFlips#flipFunctionReturningStream(f$Function)",""],"e$Object e$StackWalker#walk(f$Function)":["f$Function c$StackWalkerApiFlips#flipFunctionStream(f$Function)",""],"q$Set c$Collector#characteristics()":["q$Set c$StreamApiFlips#flipCharacteristicSet(q$Set)"]},"emulated_interface":{"e$Iterable":["x$Iterable",{"q$Spliterator e$Iterable#spliterator()":[["q$Spliterator x$Iterable#spliterator()","-1"],["q$Spliterator e$Iterable#spliterator()","9"],["q$Spliterator e$Iterable#spliterator()","8"],{"q$LinkedHashSet":["q$Spliterator q$DesugarLinkedHashSet#spliterator(q$LinkedHashSet)","-1"],"q$SortedSet":["q$Spliterator q$SortedSet#spliterator()","8"],"q$Set":["q$Spliterator q$Set#spliterator()","8"],"q$List":["q$Spliterator q$List#spliterator()","8"],"q$Collection":["q$Spliterator q$Collection#spliterator()","8"]}],"void e$Iterable#forEach(f$Consumer)":[["void x$Iterable#forEach(f$Consumer)","-1"],["void e$Iterable#forEach(f$Consumer)","9"],["void e$Iterable#forEach(f$Consumer)","8"],{"q$Collection":["void q$Collection#forEach(f$Consumer)","8"]}]}],"g$ConcurrentMap":["h$ConcurrentMap",{"e$Object g$ConcurrentMap#compute(e$Object, f$BiFunction)":[["e$Object h$ConcurrentMap#compute(e$Object, f$BiFunction)","-1"],["e$Object g$ConcurrentMap#compute(e$Object, f$BiFunction)","9"],["e$Object g$ConcurrentMap#compute(e$Object, f$BiFunction)","8"],{}],"e$Object g$ConcurrentMap#computeIfAbsent(e$Object, f$Function)":[["e$Object h$ConcurrentMap#computeIfAbsent(e$Object, f$Function)","-1"],["e$Object g$ConcurrentMap#computeIfAbsent(e$Object, f$Function)","9"],["e$Object g$ConcurrentMap#computeIfAbsent(e$Object, f$Function)","8"],{}],"e$Object g$ConcurrentMap#computeIfPresent(e$Object, f$BiFunction)":[["e$Object h$ConcurrentMap#computeIfPresent(e$Object, f$BiFunction)","-1"],["e$Object g$ConcurrentMap#computeIfPresent(e$Object, f$BiFunction)","9"],["e$Object g$ConcurrentMap#computeIfPresent(e$Object, f$BiFunction)","8"],{}],"e$Object g$ConcurrentMap#getOrDefault(e$Object, e$Object)":[["e$Object h$ConcurrentMap#getOrDefault(e$Object, e$Object)","-1"],["e$Object g$ConcurrentMap#getOrDefault(e$Object, e$Object)","9"],["e$Object g$ConcurrentMap#getOrDefault(e$Object, e$Object)","8"],{}],"e$Object g$ConcurrentMap#merge(e$Object, e$Object, f$BiFunction)":[["e$Object h$ConcurrentMap#merge(e$Object, e$Object, f$BiFunction)","-1"],["e$Object g$ConcurrentMap#merge(e$Object, e$Object, f$BiFunction)","9"],["e$Object g$ConcurrentMap#merge(e$Object, e$Object, f$BiFunction)","8"],{}],"void g$ConcurrentMap#forEach(f$BiConsumer)":[["void h$ConcurrentMap#forEach(f$BiConsumer)","-1"],["void g$ConcurrentMap#forEach(f$BiConsumer)","9"],["void g$ConcurrentMap#forEach(f$BiConsumer)","8"],{}],"void g$ConcurrentMap#replaceAll(f$BiFunction)":[["void h$ConcurrentMap#replaceAll(f$BiFunction)","-1"],["void g$ConcurrentMap#replaceAll(f$BiFunction)","9"],["void g$ConcurrentMap#replaceAll(f$BiFunction)","8"],{}]}],"q$Collection":["r$Collection",{"boolean q$Collection#removeIf(f$Predicate)":[["boolean r$Collection#removeIf(f$Predicate)","-1"],["boolean q$Collection#removeIf(f$Predicate)","9"],["boolean q$Collection#removeIf(f$Predicate)","8"],{}],"c$Stream q$Collection#parallelStream()":[["c$Stream r$Collection#parallelStream()","-1"],["c$Stream q$Collection#parallelStream()","9"],["c$Stream q$Collection#parallelStream()","8"],{}],"c$Stream q$Collection#stream()":[["c$Stream r$Collection#stream()","-1"],["c$Stream q$Collection#stream()","9"],["c$Stream q$Collection#stream()","8"],{}],"e$Object[] q$Collection#toArray(f$IntFunction)":[["e$Object[] r$Collection#toArray(f$IntFunction)","-1"],["e$Object[] q$Collection#toArray(f$IntFunction)","9"],["e$Object[] q$Collection#toArray(f$IntFunction)","8"],{}],"q$Spliterator q$Collection#spliterator()":[["q$Spliterator r$Collection#spliterator()","-1"],["q$Spliterator q$Collection#spliterator()","9"],["q$Spliterator q$Collection#spliterator()","8"],{"q$LinkedHashSet":["q$Spliterator q$DesugarLinkedHashSet#spliterator(q$LinkedHashSet)","-1"],"q$SortedSet":["q$Spliterator q$SortedSet#spliterator()","8"],"q$Set":["q$Spliterator q$Set#spliterator()","8"],"q$List":["q$Spliterator q$List#spliterator()","8"]}],"void q$Collection#forEach(f$Consumer)":[["void r$Collection#forEach(f$Consumer)","-1"],["void q$Collection#forEach(f$Consumer)","9"],["void q$Collection#forEach(f$Consumer)","8"],{}]}],"q$Comparator":["r$Comparator",{"q$Comparator q$Comparator#reversed()":[["q$Comparator r$Comparator#reversed()","-1"],["q$Comparator q$Comparator#reversed()","9"],["q$Comparator q$Comparator#reversed()","8"],{}],"q$Comparator q$Comparator#thenComparing(f$Function)":[["q$Comparator r$Comparator#thenComparing(f$Function)","-1"],["q$Comparator q$Comparator#thenComparing(f$Function)","9"],["q$Comparator q$Comparator#thenComparing(f$Function)","8"],{}],"q$Comparator q$Comparator#thenComparing(f$Function, q$Comparator)":[["q$Comparator r$Comparator#thenComparing(f$Function, q$Comparator)","-1"],["q$Comparator q$Comparator#thenComparing(f$Function, q$Comparator)","9"],["q$Comparator q$Comparator#thenComparing(f$Function, q$Comparator)","8"],{}],"q$Comparator q$Comparator#thenComparing(q$Comparator)":[["q$Comparator r$Comparator#thenComparing(q$Comparator)","-1"],["q$Comparator q$Comparator#thenComparing(q$Comparator)","9"],["q$Comparator q$Comparator#thenComparing(q$Comparator)","8"],{}],"q$Comparator q$Comparator#thenComparingDouble(f$ToDoubleFunction)":[["q$Comparator r$Comparator#thenComparingDouble(f$ToDoubleFunction)","-1"],["q$Comparator q$Comparator#thenComparingDouble(f$ToDoubleFunction)","9"],["q$Comparator q$Comparator#thenComparingDouble(f$ToDoubleFunction)","8"],{}],"q$Comparator q$Comparator#thenComparingInt(f$ToIntFunction)":[["q$Comparator r$Comparator#thenComparingInt(f$ToIntFunction)","-1"],["q$Comparator q$Comparator#thenComparingInt(f$ToIntFunction)","9"],["q$Comparator q$Comparator#thenComparingInt(f$ToIntFunction)","8"],{}],"q$Comparator q$Comparator#thenComparingLong(f$ToLongFunction)":[["q$Comparator r$Comparator#thenComparingLong(f$ToLongFunction)","-1"],["q$Comparator q$Comparator#thenComparingLong(f$ToLongFunction)","9"],["q$Comparator q$Comparator#thenComparingLong(f$ToLongFunction)","8"],{}]}],"q$Iterator":["r$Iterator",{"void q$Iterator#forEachRemaining(f$Consumer)":[["void r$Iterator#forEachRemaining(f$Consumer)","-1"],["void q$Iterator#forEachRemaining(f$Consumer)","9"],["void q$Iterator#forEachRemaining(f$Consumer)","8"],{}]}],"q$List":["r$List",{"q$Spliterator q$List#spliterator()":[["q$Spliterator r$List#spliterator()","-1"],["q$Spliterator q$List#spliterator()","9"],["q$Spliterator q$List#spliterator()","8"],{}],"void q$List#replaceAll(f$UnaryOperator)":[["void r$List#replaceAll(f$UnaryOperator)","-1"],["void q$List#replaceAll(f$UnaryOperator)","9"],["void q$List#replaceAll(f$UnaryOperator)","8"],{}],"void q$List#sort(q$Comparator)":[["void r$List#sort(q$Comparator)","-1"],["void q$List#sort(q$Comparator)","9"],["void q$List#sort(q$Comparator)","8"],{}]}],"q$Map":["r$Map",{"boolean q$Map#remove(e$Object, e$Object)":[["boolean r$Map#remove(e$Object, e$Object)","-1"],["boolean q$Map#remove(e$Object, e$Object)","9"],["boolean q$Map#remove(e$Object, e$Object)","8"],{}],"boolean q$Map#replace(e$Object, e$Object, e$Object)":[["boolean r$Map#replace(e$Object, e$Object, e$Object)","-1"],["boolean q$Map#replace(e$Object, e$Object, e$Object)","9"],["boolean q$Map#replace(e$Object, e$Object, e$Object)","8"],{}],"e$Object q$Map#compute(e$Object, f$BiFunction)":[["e$Object r$Map#compute(e$Object, f$BiFunction)","-1"],["e$Object q$Map#compute(e$Object, f$BiFunction)","9"],["e$Object q$Map#compute(e$Object, f$BiFunction)","8"],{"g$ConcurrentMap":["e$Object g$ConcurrentMap#compute(e$Object, f$BiFunction)","8"]}],"e$Object q$Map#computeIfAbsent(e$Object, f$Function)":[["e$Object r$Map#computeIfAbsent(e$Object, f$Function)","-1"],["e$Object q$Map#computeIfAbsent(e$Object, f$Function)","9"],["e$Object q$Map#computeIfAbsent(e$Object, f$Function)","8"],{"g$ConcurrentMap":["e$Object g$ConcurrentMap#computeIfAbsent(e$Object, f$Function)","8"]}],"e$Object q$Map#computeIfPresent(e$Object, f$BiFunction)":[["e$Object r$Map#computeIfPresent(e$Object, f$BiFunction)","-1"],["e$Object q$Map#computeIfPresent(e$Object, f$BiFunction)","9"],["e$Object q$Map#computeIfPresent(e$Object, f$BiFunction)","8"],{"g$ConcurrentMap":["e$Object g$ConcurrentMap#computeIfPresent(e$Object, f$BiFunction)","8"]}],"e$Object q$Map#getOrDefault(e$Object, e$Object)":[["e$Object r$Map#getOrDefault(e$Object, e$Object)","-1"],["e$Object q$Map#getOrDefault(e$Object, e$Object)","9"],["e$Object q$Map#getOrDefault(e$Object, e$Object)","8"],{"g$ConcurrentMap":["e$Object g$ConcurrentMap#getOrDefault(e$Object, e$Object)","8"]}],"e$Object q$Map#merge(e$Object, e$Object, f$BiFunction)":[["e$Object r$Map#merge(e$Object, e$Object, f$BiFunction)","-1"],["e$Object q$Map#merge(e$Object, e$Object, f$BiFunction)","9"],["e$Object q$Map#merge(e$Object, e$Object, f$BiFunction)","8"],{"g$ConcurrentMap":["e$Object g$ConcurrentMap#merge(e$Object, e$Object, f$BiFunction)","8"]}],"e$Object q$Map#putIfAbsent(e$Object, e$Object)":[["e$Object r$Map#putIfAbsent(e$Object, e$Object)","-1"],["e$Object q$Map#putIfAbsent(e$Object, e$Object)","9"],["e$Object q$Map#putIfAbsent(e$Object, e$Object)","8"],{}],"e$Object q$Map#replace(e$Object, e$Object)":[["e$Object r$Map#replace(e$Object, e$Object)","-1"],["e$Object q$Map#replace(e$Object, e$Object)","9"],["e$Object q$Map#replace(e$Object, e$Object)","8"],{}],"void q$Map#forEach(f$BiConsumer)":[["void r$Map#forEach(f$BiConsumer)","-1"],["void q$Map#forEach(f$BiConsumer)","9"],["void q$Map#forEach(f$BiConsumer)","8"],{"g$ConcurrentMap":["void g$ConcurrentMap#forEach(f$BiConsumer)","8"]}],"void q$Map#replaceAll(f$BiFunction)":[["void r$Map#replaceAll(f$BiFunction)","-1"],["void q$Map#replaceAll(f$BiFunction)","9"],["void q$Map#replaceAll(f$BiFunction)","8"],{"g$ConcurrentMap":["void g$ConcurrentMap#replaceAll(f$BiFunction)","8"]}]}],"q$Map$Entry":["r$Map$Entry",{}],"q$Set":["r$Set",{"q$Spliterator q$Set#spliterator()":[["q$Spliterator r$Set#spliterator()","-1"],["q$Spliterator q$Set#spliterator()","9"],["q$Spliterator q$Set#spliterator()","8"],{"q$LinkedHashSet":["q$Spliterator q$DesugarLinkedHashSet#spliterator(q$LinkedHashSet)","-1"],"q$SortedSet":["q$Spliterator q$SortedSet#spliterator()","8"]}]}],"q$SortedSet":["r$SortedSet",{"q$Spliterator q$SortedSet#spliterator()":[["q$Spliterator r$SortedSet#spliterator()","-1"],["q$Spliterator q$SortedSet#spliterator()","9"],["q$Spliterator q$SortedSet#spliterator()","8"],{}]}]},"wrapper":{"q$PrimitiveIterator$OfDouble":[["boolean q$Iterator#hasNext()","double q$PrimitiveIterator$OfDouble#nextDouble()","e$Double q$PrimitiveIterator$OfDouble#next()","e$Object q$PrimitiveIterator$OfDouble#next()","void q$Iterator#remove()","void q$PrimitiveIterator$OfDouble#forEachRemaining(e$Object)","void q$PrimitiveIterator$OfDouble#forEachRemaining(f$Consumer)","void q$PrimitiveIterator$OfDouble#forEachRemaining(f$DoubleConsumer)"],false,[]],"q$PrimitiveIterator$OfInt":[["boolean q$Iterator#hasNext()","e$Integer q$PrimitiveIterator$OfInt#next()","e$Object q$PrimitiveIterator$OfInt#next()","int q$PrimitiveIterator$OfInt#nextInt()","void q$Iterator#remove()","void q$PrimitiveIterator$OfInt#forEachRemaining(e$Object)","void q$PrimitiveIterator$OfInt#forEachRemaining(f$Consumer)","void q$PrimitiveIterator$OfInt#forEachRemaining(f$IntConsumer)"],false,[]],"q$PrimitiveIterator$OfLong":[["boolean q$Iterator#hasNext()","e$Long q$PrimitiveIterator$OfLong#next()","e$Object q$PrimitiveIterator$OfLong#next()","long q$PrimitiveIterator$OfLong#nextLong()","void q$Iterator#remove()","void q$PrimitiveIterator$OfLong#forEachRemaining(e$Object)","void q$PrimitiveIterator$OfLong#forEachRemaining(f$Consumer)","void q$PrimitiveIterator$OfLong#forEachRemaining(f$LongConsumer)"],false,[]],"q$Spliterator$OfDouble":[["boolean q$Spliterator#hasCharacteristics(int)","boolean q$Spliterator$OfDouble#tryAdvance(e$Object)","boolean q$Spliterator$OfDouble#tryAdvance(f$Consumer)","boolean q$Spliterator$OfDouble#tryAdvance(f$DoubleConsumer)","int q$Spliterator#characteristics()","long q$Spliterator#estimateSize()","long q$Spliterator#getExactSizeIfKnown()","q$Comparator q$Spliterator#getComparator()","q$Spliterator q$Spliterator$OfDouble#trySplit()","q$Spliterator$OfDouble q$Spliterator$OfDouble#trySplit()","q$Spliterator$OfPrimitive q$Spliterator$OfDouble#trySplit()","void q$Spliterator$OfDouble#forEachRemaining(e$Object)","void q$Spliterator$OfDouble#forEachRemaining(f$Consumer)","void q$Spliterator$OfDouble#forEachRemaining(f$DoubleConsumer)"],false,[]],"q$Spliterator$OfInt":[["boolean q$Spliterator#hasCharacteristics(int)","boolean q$Spliterator$OfInt#tryAdvance(e$Object)","boolean q$Spliterator$OfInt#tryAdvance(f$Consumer)","boolean q$Spliterator$OfInt#tryAdvance(f$IntConsumer)","int q$Spliterator#characteristics()","long q$Spliterator#estimateSize()","long q$Spliterator#getExactSizeIfKnown()","q$Comparator q$Spliterator#getComparator()","q$Spliterator q$Spliterator$OfInt#trySplit()","q$Spliterator$OfInt q$Spliterator$OfInt#trySplit()","q$Spliterator$OfPrimitive q$Spliterator$OfInt#trySplit()","void q$Spliterator$OfInt#forEachRemaining(e$Object)","void q$Spliterator$OfInt#forEachRemaining(f$Consumer)","void q$Spliterator$OfInt#forEachRemaining(f$IntConsumer)"],false,[]],"q$Spliterator$OfLong":[["boolean q$Spliterator#hasCharacteristics(int)","boolean q$Spliterator$OfLong#tryAdvance(e$Object)","boolean q$Spliterator$OfLong#tryAdvance(f$Consumer)","boolean q$Spliterator$OfLong#tryAdvance(f$LongConsumer)","int q$Spliterator#characteristics()","long q$Spliterator#estimateSize()","long q$Spliterator#getExactSizeIfKnown()","q$Comparator q$Spliterator#getComparator()","q$Spliterator q$Spliterator$OfLong#trySplit()","q$Spliterator$OfLong q$Spliterator$OfLong#trySplit()","q$Spliterator$OfPrimitive q$Spliterator$OfLong#trySplit()","void q$Spliterator$OfLong#forEachRemaining(e$Object)","void q$Spliterator$OfLong#forEachRemaining(f$Consumer)","void q$Spliterator$OfLong#forEachRemaining(f$LongConsumer)"],false,[]],"q$Spliterator$OfPrimitive":[["boolean q$Spliterator#hasCharacteristics(int)","boolean q$Spliterator#tryAdvance(f$Consumer)","boolean q$Spliterator$OfPrimitive#tryAdvance(e$Object)","int q$Spliterator#characteristics()","long q$Spliterator#estimateSize()","long q$Spliterator#getExactSizeIfKnown()","q$Comparator q$Spliterator#getComparator()","q$Spliterator q$Spliterator$OfPrimitive#trySplit()","q$Spliterator$OfPrimitive q$Spliterator$OfPrimitive#trySplit()","void q$Spliterator#forEachRemaining(f$Consumer)","void q$Spliterator$OfPrimitive#forEachRemaining(e$Object)"],false,["q$Spliterator$OfDouble","q$Spliterator$OfInt","q$Spliterator$OfLong"]],"q$Spliterator":[["boolean q$Spliterator#hasCharacteristics(int)","boolean q$Spliterator#tryAdvance(f$Consumer)","int q$Spliterator#characteristics()","long q$Spliterator#estimateSize()","long q$Spliterator#getExactSizeIfKnown()","q$Comparator q$Spliterator#getComparator()","q$Spliterator q$Spliterator#trySplit()","void q$Spliterator#forEachRemaining(f$Consumer)"],false,["q$Spliterator$OfPrimitive"]],"c$Collector$Characteristics":[[],false,[]],"c$Collector":[["f$BiConsumer c$Collector#accumulator()","f$BinaryOperator c$Collector#combiner()","f$Function c$Collector#finisher()","f$Supplier c$Collector#supplier()","q$Set c$Collector#characteristics()"],false,[]],"c$DoubleStream":[["boolean c$BaseStream#isParallel()","boolean c$DoubleStream#allMatch(f$DoublePredicate)","boolean c$DoubleStream#anyMatch(f$DoublePredicate)","boolean c$DoubleStream#noneMatch(f$DoublePredicate)","c$BaseStream c$BaseStream#onClose(e$Runnable)","c$BaseStream c$BaseStream#unordered()","c$BaseStream c$DoubleStream#parallel()","c$BaseStream c$DoubleStream#sequential()","c$DoubleStream c$DoubleStream#distinct()","c$DoubleStream c$DoubleStream#dropWhile(f$DoublePredicate)","c$DoubleStream c$DoubleStream#filter(f$DoublePredicate)","c$DoubleStream c$DoubleStream#flatMap(f$DoubleFunction)","c$DoubleStream c$DoubleStream#limit(long)","c$DoubleStream c$DoubleStream#map(f$DoubleUnaryOperator)","c$DoubleStream c$DoubleStream#parallel()","c$DoubleStream c$DoubleStream#peek(f$DoubleConsumer)","c$DoubleStream c$DoubleStream#sequential()","c$DoubleStream c$DoubleStream#skip(long)","c$DoubleStream c$DoubleStream#sorted()","c$DoubleStream c$DoubleStream#takeWhile(f$DoublePredicate)","c$IntStream c$DoubleStream#mapToInt(f$DoubleToIntFunction)","c$LongStream c$DoubleStream#mapToLong(f$DoubleToLongFunction)","c$Stream c$DoubleStream#boxed()","c$Stream c$DoubleStream#mapToObj(f$DoubleFunction)","double c$DoubleStream#reduce(double, f$DoubleBinaryOperator)","double c$DoubleStream#sum()","double[] c$DoubleStream#toArray()","e$Object c$DoubleStream#collect(f$Supplier, f$ObjDoubleConsumer, f$BiConsumer)","long c$DoubleStream#count()","q$DoubleSummaryStatistics c$DoubleStream#summaryStatistics()","q$Iterator c$DoubleStream#iterator()","q$OptionalDouble c$DoubleStream#average()","q$OptionalDouble c$DoubleStream#findAny()","q$OptionalDouble c$DoubleStream#findFirst()","q$OptionalDouble c$DoubleStream#max()","q$OptionalDouble c$DoubleStream#min()","q$OptionalDouble c$DoubleStream#reduce(f$DoubleBinaryOperator)","q$PrimitiveIterator$OfDouble c$DoubleStream#iterator()","q$Spliterator c$DoubleStream#spliterator()","q$Spliterator$OfDouble c$DoubleStream#spliterator()","void c$BaseStream#close()","void c$DoubleStream#forEach(f$DoubleConsumer)","void c$DoubleStream#forEachOrdered(f$DoubleConsumer)"],false,[]],"c$IntStream":[["boolean c$BaseStream#isParallel()","boolean c$IntStream#allMatch(f$IntPredicate)","boolean c$IntStream#anyMatch(f$IntPredicate)","boolean c$IntStream#noneMatch(f$IntPredicate)","c$BaseStream c$BaseStream#onClose(e$Runnable)","c$BaseStream c$BaseStream#unordered()","c$BaseStream c$IntStream#parallel()","c$BaseStream c$IntStream#sequential()","c$DoubleStream c$IntStream#asDoubleStream()","c$DoubleStream c$IntStream#mapToDouble(f$IntToDoubleFunction)","c$IntStream c$IntStream#distinct()","c$IntStream c$IntStream#dropWhile(f$IntPredicate)","c$IntStream c$IntStream#filter(f$IntPredicate)","c$IntStream c$IntStream#flatMap(f$IntFunction)","c$IntStream c$IntStream#limit(long)","c$IntStream c$IntStream#map(f$IntUnaryOperator)","c$IntStream c$IntStream#parallel()","c$IntStream c$IntStream#peek(f$IntConsumer)","c$IntStream c$IntStream#sequential()","c$IntStream c$IntStream#skip(long)","c$IntStream c$IntStream#sorted()","c$IntStream c$IntStream#takeWhile(f$IntPredicate)","c$LongStream c$IntStream#asLongStream()","c$LongStream c$IntStream#mapToLong(f$IntToLongFunction)","c$Stream c$IntStream#boxed()","c$Stream c$IntStream#mapToObj(f$IntFunction)","e$Object c$IntStream#collect(f$Supplier, f$ObjIntConsumer, f$BiConsumer)","int c$IntStream#reduce(int, f$IntBinaryOperator)","int c$IntStream#sum()","int[] c$IntStream#toArray()","long c$IntStream#count()","q$IntSummaryStatistics c$IntStream#summaryStatistics()","q$Iterator c$IntStream#iterator()","q$OptionalDouble c$IntStream#average()","q$OptionalInt c$IntStream#findAny()","q$OptionalInt c$IntStream#findFirst()","q$OptionalInt c$IntStream#max()","q$OptionalInt c$IntStream#min()","q$OptionalInt c$IntStream#reduce(f$IntBinaryOperator)","q$PrimitiveIterator$OfInt c$IntStream#iterator()","q$Spliterator c$IntStream#spliterator()","q$Spliterator$OfInt c$IntStream#spliterator()","void c$BaseStream#close()","void c$IntStream#forEach(f$IntConsumer)","void c$IntStream#forEachOrdered(f$IntConsumer)"],false,[]],"c$LongStream":[["boolean c$BaseStream#isParallel()","boolean c$LongStream#allMatch(f$LongPredicate)","boolean c$LongStream#anyMatch(f$LongPredicate)","boolean c$LongStream#noneMatch(f$LongPredicate)","c$BaseStream c$BaseStream#onClose(e$Runnable)","c$BaseStream c$BaseStream#unordered()","c$BaseStream c$LongStream#parallel()","c$BaseStream c$LongStream#sequential()","c$DoubleStream c$LongStream#asDoubleStream()","c$DoubleStream c$LongStream#mapToDouble(f$LongToDoubleFunction)","c$IntStream c$LongStream#mapToInt(f$LongToIntFunction)","c$LongStream c$LongStream#distinct()","c$LongStream c$LongStream#dropWhile(f$LongPredicate)","c$LongStream c$LongStream#filter(f$LongPredicate)","c$LongStream c$LongStream#flatMap(f$LongFunction)","c$LongStream c$LongStream#limit(long)","c$LongStream c$LongStream#map(f$LongUnaryOperator)","c$LongStream c$LongStream#parallel()","c$LongStream c$LongStream#peek(f$LongConsumer)","c$LongStream c$LongStream#sequential()","c$LongStream c$LongStream#skip(long)","c$LongStream c$LongStream#sorted()","c$LongStream c$LongStream#takeWhile(f$LongPredicate)","c$Stream c$LongStream#boxed()","c$Stream c$LongStream#mapToObj(f$LongFunction)","e$Object c$LongStream#collect(f$Supplier, f$ObjLongConsumer, f$BiConsumer)","long c$LongStream#count()","long c$LongStream#reduce(long, f$LongBinaryOperator)","long c$LongStream#sum()","long[] c$LongStream#toArray()","q$Iterator c$LongStream#iterator()","q$LongSummaryStatistics c$LongStream#summaryStatistics()","q$OptionalDouble c$LongStream#average()","q$OptionalLong c$LongStream#findAny()","q$OptionalLong c$LongStream#findFirst()","q$OptionalLong c$LongStream#max()","q$OptionalLong c$LongStream#min()","q$OptionalLong c$LongStream#reduce(f$LongBinaryOperator)","q$PrimitiveIterator$OfLong c$LongStream#iterator()","q$Spliterator c$LongStream#spliterator()","q$Spliterator$OfLong c$LongStream#spliterator()","void c$BaseStream#close()","void c$LongStream#forEach(f$LongConsumer)","void c$LongStream#forEachOrdered(f$LongConsumer)"],false,[]],"c$Stream":[["boolean c$BaseStream#isParallel()","boolean c$Stream#allMatch(f$Predicate)","boolean c$Stream#anyMatch(f$Predicate)","boolean c$Stream#noneMatch(f$Predicate)","c$BaseStream c$BaseStream#onClose(e$Runnable)","c$BaseStream c$BaseStream#parallel()","c$BaseStream c$BaseStream#sequential()","c$BaseStream c$BaseStream#unordered()","c$DoubleStream c$Stream#flatMapToDouble(f$Function)","c$DoubleStream c$Stream#mapToDouble(f$ToDoubleFunction)","c$IntStream c$Stream#flatMapToInt(f$Function)","c$IntStream c$Stream#mapToInt(f$ToIntFunction)","c$LongStream c$Stream#flatMapToLong(f$Function)","c$LongStream c$Stream#mapToLong(f$ToLongFunction)","c$Stream c$Stream#distinct()","c$Stream c$Stream#dropWhile(f$Predicate)","c$Stream c$Stream#filter(f$Predicate)","c$Stream c$Stream#flatMap(f$Function)","c$Stream c$Stream#limit(long)","c$Stream c$Stream#map(f$Function)","c$Stream c$Stream#peek(f$Consumer)","c$Stream c$Stream#skip(long)","c$Stream c$Stream#sorted()","c$Stream c$Stream#sorted(q$Comparator)","c$Stream c$Stream#takeWhile(f$Predicate)","e$Object c$Stream#collect(c$Collector)","e$Object c$Stream#collect(f$Supplier, f$BiConsumer, f$BiConsumer)","e$Object c$Stream#reduce(e$Object, f$BiFunction, f$BinaryOperator)","e$Object c$Stream#reduce(e$Object, f$BinaryOperator)","e$Object[] c$Stream#toArray()","e$Object[] c$Stream#toArray(f$IntFunction)","long c$Stream#count()","q$Iterator c$BaseStream#iterator()","q$Optional c$Stream#findAny()","q$Optional c$Stream#findFirst()","q$Optional c$Stream#max(q$Comparator)","q$Optional c$Stream#min(q$Comparator)","q$Optional c$Stream#reduce(f$BinaryOperator)","q$Spliterator c$BaseStream#spliterator()","void c$BaseStream#close()","void c$Stream#forEach(f$Consumer)","void c$Stream#forEachOrdered(f$Consumer)"],false,[]],"c$BaseStream":[["boolean c$BaseStream#isParallel()","c$BaseStream c$BaseStream#onClose(e$Runnable)","c$BaseStream c$BaseStream#parallel()","c$BaseStream c$BaseStream#sequential()","c$BaseStream c$BaseStream#unordered()","q$Iterator c$BaseStream#iterator()","q$Spliterator c$BaseStream#spliterator()","void c$BaseStream#close()"],false,["c$DoubleStream","c$IntStream","c$LongStream","c$Stream"]]},"custom_conversion":{"q$DoubleSummaryStatistics":["q$DoubleSummaryStatistics q$DoubleSummaryStatisticsConversions#convert(r$DoubleSummaryStatistics)","r$DoubleSummaryStatistics q$DoubleSummaryStatisticsConversions#convert(q$DoubleSummaryStatistics)"],"q$IntSummaryStatistics":["q$IntSummaryStatistics q$IntSummaryStatisticsConversions#convert(r$IntSummaryStatistics)","r$IntSummaryStatistics q$IntSummaryStatisticsConversions#convert(q$IntSummaryStatistics)"],"q$LongSummaryStatistics":["q$LongSummaryStatistics q$LongSummaryStatisticsConversions#convert(r$LongSummaryStatistics)","r$LongSummaryStatistics q$LongSummaryStatisticsConversions#convert(q$LongSummaryStatistics)"],"q$Optional":["q$Optional q$OptionalConversions#convert(r$Optional)","r$Optional q$OptionalConversions#convert(q$Optional)"],"q$OptionalDouble":["q$OptionalDouble q$OptionalConversions#convert(r$OptionalDouble)","r$OptionalDouble q$OptionalConversions#convert(q$OptionalDouble)"],"q$OptionalInt":["q$OptionalInt q$OptionalConversions#convert(r$OptionalInt)","r$OptionalInt q$OptionalConversions#convert(q$OptionalInt)"],"q$OptionalLong":["q$OptionalLong q$OptionalConversions#convert(r$OptionalLong)","r$OptionalLong q$OptionalConversions#convert(q$OptionalLong)"]}}],"program_flags":[{"api_level_below_or_equal":10000,"amend_library_method":["public static c$Stream c$Stream#iterate(e$Object, f$Predicate, f$UnaryOperator)","public static c$IntStream c$IntStream#iterate(int, f$IntPredicate, f$IntUnaryOperator)","public static c$LongStream c$LongStream#iterate(long, f$LongPredicate, f$LongUnaryOperator)","public static c$DoubleStream c$DoubleStream#iterate(double, f$DoublePredicate, f$DoubleUnaryOperator)"]},{"api_level_below_or_equal":33,"amend_library_method":["public e$Object[] q$Collection#toArray(f$IntFunction)"]},{"api_level_below_or_equal":32,"api_level_greater_or_equal":26,"covariant_retarget":{"k$IsoEra a$LocalDate#getEra()":"k$Era a$LocalDate#getEra()"},"amend_library_method":["public k$IsoEra a$LocalDate#getEra()"]},{"api_level_below_or_equal":25,"static_retarget":{"q$Date q$Date#from(a$Instant)":"q$Date q$DesugarDate#from(a$Instant)","q$GregorianCalendar q$GregorianCalendar#from(a$ZonedDateTime)":"q$GregorianCalendar q$DesugarGregorianCalendar#from(a$ZonedDateTime)","q$TimeZone q$TimeZone#getTimeZone(e$String)":"q$TimeZone q$DesugarTimeZone#getTimeZone(e$String)"},"non_emulated_virtual_retarget":{"a$Instant q$Calendar#toInstant()":"a$Instant q$DesugarCalendar#toInstant(q$Calendar)"}},{"api_level_below_or_equal":23,"static_retarget":{"q$Map q$Collections#synchronizedMap(q$Map)":"q$Map q$DesugarCollections#synchronizedMap(q$Map)","q$SortedMap q$Collections#synchronizedSortedMap(q$SortedMap)":"q$SortedMap q$DesugarCollections#synchronizedSortedMap(q$SortedMap)"},"non_emulated_virtual_retarget":{"e$Object s$AtomicReference#accumulateAndGet(e$Object, f$BinaryOperator)":"e$Object s$DesugarAtomicReference#accumulateAndGet(s$AtomicReference, e$Object, f$BinaryOperator)","e$Object s$AtomicReference#getAndAccumulate(e$Object, f$BinaryOperator)":"e$Object s$DesugarAtomicReference#getAndAccumulate(s$AtomicReference, e$Object, f$BinaryOperator)","e$Object s$AtomicReference#getAndUpdate(f$UnaryOperator)":"e$Object s$DesugarAtomicReference#getAndUpdate(s$AtomicReference, f$UnaryOperator)","e$Object s$AtomicReference#updateAndGet(f$UnaryOperator)":"e$Object s$DesugarAtomicReference#updateAndGet(s$AtomicReference, f$UnaryOperator)","int s$AtomicInteger#accumulateAndGet(int, f$IntBinaryOperator)":"int s$DesugarAtomicInteger#accumulateAndGet(s$AtomicInteger, int, f$IntBinaryOperator)","int s$AtomicInteger#getAndAccumulate(int, f$IntBinaryOperator)":"int s$DesugarAtomicInteger#getAndAccumulate(s$AtomicInteger, int, f$IntBinaryOperator)","int s$AtomicInteger#getAndUpdate(f$IntUnaryOperator)":"int s$DesugarAtomicInteger#getAndUpdate(s$AtomicInteger, f$IntUnaryOperator)","int s$AtomicInteger#updateAndGet(f$IntUnaryOperator)":"int s$DesugarAtomicInteger#updateAndGet(s$AtomicInteger, f$IntUnaryOperator)","long s$AtomicLong#accumulateAndGet(long, f$LongBinaryOperator)":"long s$DesugarAtomicLong#accumulateAndGet(s$AtomicLong, long, f$LongBinaryOperator)","long s$AtomicLong#getAndAccumulate(long, f$LongBinaryOperator)":"long s$DesugarAtomicLong#getAndAccumulate(s$AtomicLong, long, f$LongBinaryOperator)","long s$AtomicLong#getAndUpdate(f$LongUnaryOperator)":"long s$DesugarAtomicLong#getAndUpdate(s$AtomicLong, f$LongUnaryOperator)","long s$AtomicLong#updateAndGet(f$LongUnaryOperator)":"long s$DesugarAtomicLong#updateAndGet(s$AtomicLong, f$LongUnaryOperator)"}}],"library_flags":[{"api_level_below_or_equal":30,"rewrite_type":{"A$GetBooleanAction":"B$GetBooleanAction","A$GetIntegerAction":"B$GetIntegerAction","A$GetLongAction":"B$GetLongAction","A$GetPropertyAction":"B$GetPropertyAction","A$GetPropertyAction$1":"B$GetPropertyAction$1","A$OpenFileInputStreamAction":"B$OpenFileInputStreamAction","A$PutAllAction":"B$PutAllAction","C$DesugarUnsafe":"D$DesugarUnsafe","E$Unsafe":"D$DesugarUnsafe","y$Preconditions":"z$Preconditions","y$Preconditions$1":"z$Preconditions$1","y$StaticProperty":"z$StaticProperty"},"legacy_backport":{"e$DesugarDouble":"e$Double","e$DesugarInteger":"e$Integer","e$DesugarLong":"e$Long","e$DesugarMath":"e$Math"}},{"api_level_below_or_equal":25,"rewrite_type":{"b$Clock":"a$Clock","b$Clock$FixedClock":"a$Clock$FixedClock","b$Clock$OffsetClock":"a$Clock$OffsetClock","b$Clock$SystemClock":"a$Clock$SystemClock","b$Clock$TickClock":"a$Clock$TickClock","b$DateTimeException":"a$DateTimeException","b$DayOfWeek":"a$DayOfWeek","b$DesugarClock":"a$DesugarClock","b$DesugarClock$DesugarTickClock":"a$DesugarClock$DesugarTickClock","b$DesugarDuration":"a$DesugarDuration","b$DesugarLocalDate":"a$DesugarLocalDate","b$DesugarLocalTime":"a$DesugarLocalTime","b$DesugarOffsetTime":"a$DesugarOffsetTime","b$Duration":"a$Duration","b$Duration$1":"a$Duration$1","b$Duration$DurationUnits":"a$Duration$DurationUnits","b$Duration$Lazy":"a$Duration$Lazy","b$Instant":"a$Instant","b$Instant$1":"a$Instant$1","b$LocalDate":"a$LocalDate","b$LocalDate$1":"a$LocalDate$1","b$LocalDateTime":"a$LocalDateTime","b$LocalDateTime$1":"a$LocalDateTime$1","b$LocalTime":"a$LocalTime","b$LocalTime$1":"a$LocalTime$1","b$Month":"a$Month","b$Month$1":"a$Month$1","b$MonthDay":"a$MonthDay","b$MonthDay$1":"a$MonthDay$1","b$OffsetDateTime":"a$OffsetDateTime","b$OffsetDateTime$1":"a$OffsetDateTime$1","b$OffsetTime":"a$OffsetTime","b$OffsetTime$1":"a$OffsetTime$1","b$Period":"a$Period","b$Ser":"a$Ser","b$TimeConversions":"a$TimeConversions","b$Year":"a$Year","b$Year$1":"a$Year$1","b$YearMonth":"a$YearMonth","b$YearMonth$1":"a$YearMonth$1","b$ZoneId":"a$ZoneId","b$ZoneId$1":"a$ZoneId$1","b$ZoneOffset":"a$ZoneOffset","b$ZoneRegion":"a$ZoneRegion","b$ZonedDateTime":"a$ZonedDateTime","b$ZonedDateTime$1":"a$ZonedDateTime$1","j$ChronoField":"i$ChronoField","j$ChronoUnit":"i$ChronoUnit","j$IsoFields":"i$IsoFields","j$IsoFields$1":"i$IsoFields$1","j$IsoFields$Field":"i$IsoFields$Field","j$IsoFields$Field$1":"i$IsoFields$Field$1","j$IsoFields$Field$2":"i$IsoFields$Field$2","j$IsoFields$Field$3":"i$IsoFields$Field$3","j$IsoFields$Field$4":"i$IsoFields$Field$4","j$IsoFields$Unit":"i$IsoFields$Unit","j$JulianFields":"i$JulianFields","j$JulianFields$Field":"i$JulianFields$Field","j$Temporal":"i$Temporal","j$TemporalAccessor":"i$TemporalAccessor","j$TemporalAdjuster":"i$TemporalAdjuster","j$TemporalAdjusters":"i$TemporalAdjusters","j$TemporalAmount":"i$TemporalAmount","j$TemporalField":"i$TemporalField","j$TemporalQueries":"i$TemporalQueries","j$TemporalQueries$1":"i$TemporalQueries$1","j$TemporalQueries$2":"i$TemporalQueries$2","j$TemporalQueries$3":"i$TemporalQueries$3","j$TemporalQueries$4":"i$TemporalQueries$4","j$TemporalQueries$5":"i$TemporalQueries$5","j$TemporalQueries$6":"i$TemporalQueries$6","j$TemporalQueries$7":"i$TemporalQueries$7","j$TemporalQuery":"i$TemporalQuery","j$TemporalUnit":"i$TemporalUnit","j$UnsupportedTemporalTypeException":"i$UnsupportedTemporalTypeException","j$ValueRange":"i$ValueRange","j$WeekFields":"i$WeekFields","j$WeekFields$ComputedDayOfField":"i$WeekFields$ComputedDayOfField","l$AbstractChronology":"k$AbstractChronology","l$ChronoLocalDate":"k$ChronoLocalDate","l$ChronoLocalDateImpl":"k$ChronoLocalDateImpl","l$ChronoLocalDateImpl$1":"k$ChronoLocalDateImpl$1","l$ChronoLocalDateTime":"k$ChronoLocalDateTime","l$ChronoLocalDateTimeImpl":"k$ChronoLocalDateTimeImpl","l$ChronoLocalDateTimeImpl$1":"k$ChronoLocalDateTimeImpl$1","l$ChronoPeriod":"k$ChronoPeriod","l$ChronoPeriodImpl":"k$ChronoPeriodImpl","l$ChronoZonedDateTime":"k$ChronoZonedDateTime","l$ChronoZonedDateTime$1":"k$ChronoZonedDateTime$1","l$ChronoZonedDateTimeImpl":"k$ChronoZonedDateTimeImpl","l$ChronoZonedDateTimeImpl$1":"k$ChronoZonedDateTimeImpl$1","l$Chronology":"k$Chronology","l$Chronology$1":"k$Chronology$1","l$DesugarIsoChronology":"k$DesugarIsoChronology","l$Era":"k$Era","l$HijrahChronology":"k$HijrahChronology","l$HijrahChronology$1":"k$HijrahChronology$1","l$HijrahDate":"k$HijrahDate","l$HijrahDate$1":"k$HijrahDate$1","l$HijrahEra":"k$HijrahEra","l$IsoChronology":"k$IsoChronology","l$IsoEra":"k$IsoEra","l$JapaneseChronology":"k$JapaneseChronology","l$JapaneseChronology$1":"k$JapaneseChronology$1","l$JapaneseDate":"k$JapaneseDate","l$JapaneseDate$1":"k$JapaneseDate$1","l$JapaneseEra":"k$JapaneseEra","l$MinguoChronology":"k$MinguoChronology","l$MinguoChronology$1":"k$MinguoChronology$1","l$MinguoDate":"k$MinguoDate","l$MinguoDate$1":"k$MinguoDate$1","l$MinguoEra":"k$MinguoEra","l$Ser":"k$Ser","l$ThaiBuddhistChronology":"k$ThaiBuddhistChronology","l$ThaiBuddhistChronology$1":"k$ThaiBuddhistChronology$1","l$ThaiBuddhistDate":"k$ThaiBuddhistDate","l$ThaiBuddhistDate$1":"k$ThaiBuddhistDate$1","l$ThaiBuddhistEra":"k$ThaiBuddhistEra","n$Ser":"m$Ser","n$TzdbZoneRulesProvider":"m$TzdbZoneRulesProvider","n$ZoneOffsetTransition":"m$ZoneOffsetTransition","n$ZoneOffsetTransitionRule":"m$ZoneOffsetTransitionRule","n$ZoneOffsetTransitionRule$1":"m$ZoneOffsetTransitionRule$1","n$ZoneOffsetTransitionRule$TimeDefinition":"m$ZoneOffsetTransitionRule$TimeDefinition","n$ZoneRules":"m$ZoneRules","n$ZoneRulesException":"m$ZoneRulesException","n$ZoneRulesProvider":"m$ZoneRulesProvider","n$ZoneRulesProvider$1":"m$ZoneRulesProvider$1","n$ZoneRulesProvider$TimeZoneRulesProvider":"m$ZoneRulesProvider$TimeZoneRulesProvider","p$DateTimeFormatter":"o$DateTimeFormatter","p$DateTimeFormatter$ClassicFormat":"o$DateTimeFormatter$ClassicFormat","p$DateTimeFormatterBuilder":"o$DateTimeFormatterBuilder","p$DateTimeFormatterBuilder$1":"o$DateTimeFormatterBuilder$1","p$DateTimeFormatterBuilder$2":"o$DateTimeFormatterBuilder$2","p$DateTimeFormatterBuilder$3":"o$DateTimeFormatterBuilder$3","p$DateTimeFormatterBuilder$CharLiteralPrinterParser":"o$DateTimeFormatterBuilder$CharLiteralPrinterParser","p$DateTimeFormatterBuilder$ChronoPrinterParser":"o$DateTimeFormatterBuilder$ChronoPrinterParser","p$DateTimeFormatterBuilder$CompositePrinterParser":"o$DateTimeFormatterBuilder$CompositePrinterParser","p$DateTimeFormatterBuilder$DateTimePrinterParser":"o$DateTimeFormatterBuilder$DateTimePrinterParser","p$DateTimeFormatterBuilder$DefaultValueParser":"o$DateTimeFormatterBuilder$DefaultValueParser","p$DateTimeFormatterBuilder$FractionPrinterParser":"o$DateTimeFormatterBuilder$FractionPrinterParser","p$DateTimeFormatterBuilder$InstantPrinterParser":"o$DateTimeFormatterBuilder$InstantPrinterParser","p$DateTimeFormatterBuilder$LocalizedOffsetIdPrinterParser":"o$DateTimeFormatterBuilder$LocalizedOffsetIdPrinterParser","p$DateTimeFormatterBuilder$LocalizedPrinterParser":"o$DateTimeFormatterBuilder$LocalizedPrinterParser","p$DateTimeFormatterBuilder$NumberPrinterParser":"o$DateTimeFormatterBuilder$NumberPrinterParser","p$DateTimeFormatterBuilder$OffsetIdPrinterParser":"o$DateTimeFormatterBuilder$OffsetIdPrinterParser","p$DateTimeFormatterBuilder$PadPrinterParserDecorator":"o$DateTimeFormatterBuilder$PadPrinterParserDecorator","p$DateTimeFormatterBuilder$PrefixTree":"o$DateTimeFormatterBuilder$PrefixTree","p$DateTimeFormatterBuilder$PrefixTree$CI":"o$DateTimeFormatterBuilder$PrefixTree$CI","p$DateTimeFormatterBuilder$PrefixTree$LENIENT":"o$DateTimeFormatterBuilder$PrefixTree$LENIENT","p$DateTimeFormatterBuilder$ReducedPrinterParser":"o$DateTimeFormatterBuilder$ReducedPrinterParser","p$DateTimeFormatterBuilder$SettingsParser":"o$DateTimeFormatterBuilder$SettingsParser","p$DateTimeFormatterBuilder$StringLiteralPrinterParser":"o$DateTimeFormatterBuilder$StringLiteralPrinterParser","p$DateTimeFormatterBuilder$TextPrinterParser":"o$DateTimeFormatterBuilder$TextPrinterParser","p$DateTimeFormatterBuilder$WeekBasedFieldPrinterParser":"o$DateTimeFormatterBuilder$WeekBasedFieldPrinterParser","p$DateTimeFormatterBuilder$ZoneIdPrinterParser":"o$DateTimeFormatterBuilder$ZoneIdPrinterParser","p$DateTimeFormatterBuilder$ZoneTextPrinterParser":"o$DateTimeFormatterBuilder$ZoneTextPrinterParser","p$DateTimeFormatterBuilderHelper":"o$DateTimeFormatterBuilderHelper","p$DateTimeParseContext":"o$DateTimeParseContext","p$DateTimeParseException":"o$DateTimeParseException","p$DateTimePrintContext":"o$DateTimePrintContext","p$DateTimePrintContext$1":"o$DateTimePrintContext$1","p$DateTimeTextProvider":"o$DateTimeTextProvider","p$DateTimeTextProvider$1":"o$DateTimeTextProvider$1","p$DateTimeTextProvider$LocaleStore":"o$DateTimeTextProvider$LocaleStore","p$DecimalStyle":"o$DecimalStyle","p$FormatStyle":"o$FormatStyle","p$Parsed":"o$Parsed","p$ResolverStyle":"o$ResolverStyle","p$SignStyle":"o$SignStyle","p$TextStyle":"o$TextStyle","p$ZoneName":"o$ZoneName"},"static_retarget":{"boolean q$Arrays#deepEquals0(e$Object, e$Object)":"boolean q$DesugarArrays#deepEquals0(e$Object, e$Object)"},"amend_library_method":["private static boolean q$Arrays#deepEquals0(e$Object, e$Object)"]},{"api_level_below_or_equal":23,"rewrite_type":{"d$Collector":"c$Collector","d$Collector$Characteristics":"c$Collector$Characteristics","d$Collectors":"c$Collectors","d$Collectors$1OptionalBox":"c$Collectors$1OptionalBox","d$Collectors$CollectorImpl":"c$Collectors$CollectorImpl","d$Collectors$Partition":"c$Collectors$Partition","d$Collectors$Partition$1":"c$Collectors$Partition$1","d$DoubleStream":"c$DoubleStream","d$DoubleStream$1":"c$DoubleStream$1","d$DoubleStream$2":"c$DoubleStream$2","d$DoubleStream$Builder":"c$DoubleStream$Builder","d$IntStream":"c$IntStream","d$IntStream$1":"c$IntStream$1","d$IntStream$2":"c$IntStream$2","d$IntStream$Builder":"c$IntStream$Builder","d$LongStream":"c$LongStream","d$LongStream$1":"c$LongStream$1","d$LongStream$2":"c$LongStream$2","d$LongStream$Builder":"c$LongStream$Builder","d$Stream":"c$Stream","d$Stream$1":"c$Stream$1","d$Stream$2":"c$Stream$2","d$Stream$Builder":"c$Stream$Builder","d$StreamApiFlips":"c$StreamApiFlips","d$StreamOpFlag":"c$StreamOpFlag","d$StreamOpFlag$MaskBuilder":"c$StreamOpFlag$MaskBuilder","d$StreamOpFlag$Type":"c$StreamOpFlag$Type","d$StreamShape":"c$StreamShape","d$StreamSpliterators":"c$StreamSpliterators","d$StreamSpliterators$AbstractWrappingSpliterator":"c$StreamSpliterators$AbstractWrappingSpliterator","d$StreamSpliterators$ArrayBuffer":"c$StreamSpliterators$ArrayBuffer","d$StreamSpliterators$ArrayBuffer$OfDouble":"c$StreamSpliterators$ArrayBuffer$OfDouble","d$StreamSpliterators$ArrayBuffer$OfInt":"c$StreamSpliterators$ArrayBuffer$OfInt","d$StreamSpliterators$ArrayBuffer$OfLong":"c$StreamSpliterators$ArrayBuffer$OfLong","d$StreamSpliterators$ArrayBuffer$OfPrimitive":"c$StreamSpliterators$ArrayBuffer$OfPrimitive","d$StreamSpliterators$ArrayBuffer$OfRef":"c$StreamSpliterators$ArrayBuffer$OfRef","d$StreamSpliterators$DelegatingSpliterator":"c$StreamSpliterators$DelegatingSpliterator","d$StreamSpliterators$DelegatingSpliterator$OfDouble":"c$StreamSpliterators$DelegatingSpliterator$OfDouble","d$StreamSpliterators$DelegatingSpliterator$OfInt":"c$StreamSpliterators$DelegatingSpliterator$OfInt","d$StreamSpliterators$DelegatingSpliterator$OfLong":"c$StreamSpliterators$DelegatingSpliterator$OfLong","d$StreamSpliterators$DelegatingSpliterator$OfPrimitive":"c$StreamSpliterators$DelegatingSpliterator$OfPrimitive","d$StreamSpliterators$DistinctSpliterator":"c$StreamSpliterators$DistinctSpliterator","d$StreamSpliterators$DoubleWrappingSpliterator":"c$StreamSpliterators$DoubleWrappingSpliterator","d$StreamSpliterators$InfiniteSupplyingSpliterator":"c$StreamSpliterators$InfiniteSupplyingSpliterator","d$StreamSpliterators$InfiniteSupplyingSpliterator$OfDouble":"c$StreamSpliterators$InfiniteSupplyingSpliterator$OfDouble","d$StreamSpliterators$InfiniteSupplyingSpliterator$OfInt":"c$StreamSpliterators$InfiniteSupplyingSpliterator$OfInt","d$StreamSpliterators$InfiniteSupplyingSpliterator$OfLong":"c$StreamSpliterators$InfiniteSupplyingSpliterator$OfLong","d$StreamSpliterators$InfiniteSupplyingSpliterator$OfRef":"c$StreamSpliterators$InfiniteSupplyingSpliterator$OfRef","d$StreamSpliterators$IntWrappingSpliterator":"c$StreamSpliterators$IntWrappingSpliterator","d$StreamSpliterators$LongWrappingSpliterator":"c$StreamSpliterators$LongWrappingSpliterator","d$StreamSpliterators$SliceSpliterator":"c$StreamSpliterators$SliceSpliterator","d$StreamSpliterators$SliceSpliterator$OfDouble":"c$StreamSpliterators$SliceSpliterator$OfDouble","d$StreamSpliterators$SliceSpliterator$OfInt":"c$StreamSpliterators$SliceSpliterator$OfInt","d$StreamSpliterators$SliceSpliterator$OfLong":"c$StreamSpliterators$SliceSpliterator$OfLong","d$StreamSpliterators$SliceSpliterator$OfPrimitive":"c$StreamSpliterators$SliceSpliterator$OfPrimitive","d$StreamSpliterators$SliceSpliterator$OfRef":"c$StreamSpliterators$SliceSpliterator$OfRef","d$StreamSpliterators$UnorderedSliceSpliterator":"c$StreamSpliterators$UnorderedSliceSpliterator","d$StreamSpliterators$UnorderedSliceSpliterator$OfDouble":"c$StreamSpliterators$UnorderedSliceSpliterator$OfDouble","d$StreamSpliterators$UnorderedSliceSpliterator$OfInt":"c$StreamSpliterators$UnorderedSliceSpliterator$OfInt","d$StreamSpliterators$UnorderedSliceSpliterator$OfLong":"c$StreamSpliterators$UnorderedSliceSpliterator$OfLong","d$StreamSpliterators$UnorderedSliceSpliterator$OfPrimitive":"c$StreamSpliterators$UnorderedSliceSpliterator$OfPrimitive","d$StreamSpliterators$UnorderedSliceSpliterator$OfRef":"c$StreamSpliterators$UnorderedSliceSpliterator$OfRef","d$StreamSpliterators$UnorderedSliceSpliterator$PermitStatus":"c$StreamSpliterators$UnorderedSliceSpliterator$PermitStatus","d$StreamSpliterators$WrappingSpliterator":"c$StreamSpliterators$WrappingSpliterator","d$StreamSupport":"c$StreamSupport","d$Streams":"c$Streams","d$Streams$1":"c$Streams$1","d$Streams$2":"c$Streams$2","d$Streams$AbstractStreamBuilderImpl":"c$Streams$AbstractStreamBuilderImpl","d$Streams$ConcatSpliterator":"c$Streams$ConcatSpliterator","d$Streams$ConcatSpliterator$OfDouble":"c$Streams$ConcatSpliterator$OfDouble","d$Streams$ConcatSpliterator$OfInt":"c$Streams$ConcatSpliterator$OfInt","d$Streams$ConcatSpliterator$OfLong":"c$Streams$ConcatSpliterator$OfLong","d$Streams$ConcatSpliterator$OfPrimitive":"c$Streams$ConcatSpliterator$OfPrimitive","d$Streams$ConcatSpliterator$OfRef":"c$Streams$ConcatSpliterator$OfRef","d$Streams$DoubleStreamBuilderImpl":"c$Streams$DoubleStreamBuilderImpl","d$Streams$IntStreamBuilderImpl":"c$Streams$IntStreamBuilderImpl","d$Streams$LongStreamBuilderImpl":"c$Streams$LongStreamBuilderImpl","d$Streams$RangeIntSpliterator":"c$Streams$RangeIntSpliterator","d$Streams$RangeLongSpliterator":"c$Streams$RangeLongSpliterator","d$Streams$StreamBuilderImpl":"c$Streams$StreamBuilderImpl","g$Helpers":"h$Helpers","q$AbstractList":"r$AbstractList","q$AbstractList$Itr":"r$AbstractList$Itr","q$AbstractList$ListItr":"r$AbstractList$ListItr","q$AbstractList$RandomAccessSpliterator":"r$AbstractList$RandomAccessSpliterator","q$AbstractList$RandomAccessSubList":"r$AbstractList$RandomAccessSubList","q$AbstractList$SubList":"r$AbstractList$SubList","q$AbstractList$SubList$1":"r$AbstractList$SubList$1","q$CollSer":"r$CollSer","q$Comparators":"r$Comparators","q$Comparators$NaturalOrderComparator":"r$Comparators$NaturalOrderComparator","q$Comparators$NullComparator":"r$Comparators$NullComparator","q$ConversionRuntimeException":"r$ConversionRuntimeException","q$ImmutableCollections":"r$ImmutableCollections","q$ImmutableCollections$AbstractImmutableCollection":"r$ImmutableCollections$AbstractImmutableCollection","q$ImmutableCollections$AbstractImmutableList":"r$ImmutableCollections$AbstractImmutableList","q$ImmutableCollections$AbstractImmutableMap":"r$ImmutableCollections$AbstractImmutableMap","q$ImmutableCollections$AbstractImmutableSet":"r$ImmutableCollections$AbstractImmutableSet","q$ImmutableCollections$List12":"r$ImmutableCollections$List12","q$ImmutableCollections$ListItr":"r$ImmutableCollections$ListItr","q$ImmutableCollections$ListN":"r$ImmutableCollections$ListN","q$ImmutableCollections$Map1":"r$ImmutableCollections$Map1","q$ImmutableCollections$MapN":"r$ImmutableCollections$MapN","q$ImmutableCollections$MapN$1":"r$ImmutableCollections$MapN$1","q$ImmutableCollections$MapN$MapNIterator":"r$ImmutableCollections$MapN$MapNIterator","q$ImmutableCollections$Set12":"r$ImmutableCollections$Set12","q$ImmutableCollections$Set12$1":"r$ImmutableCollections$Set12$1","q$ImmutableCollections$SetN":"r$ImmutableCollections$SetN","q$ImmutableCollections$SetN$SetNIterator":"r$ImmutableCollections$SetN$SetNIterator","q$ImmutableCollections$SubList":"r$ImmutableCollections$SubList","q$KeyValueHolder":"r$KeyValueHolder","q$SortedSet$1":"r$SortedSet$1","q$Tripwire":"r$Tripwire","r$DoubleSummaryStatistics":"q$DoubleSummaryStatistics","r$DoubleSummaryStatisticsConversions":"q$DoubleSummaryStatisticsConversions","r$IntSummaryStatistics":"q$IntSummaryStatistics","r$IntSummaryStatisticsConversions":"q$IntSummaryStatisticsConversions","r$LongSummaryStatistics":"q$LongSummaryStatistics","r$LongSummaryStatisticsConversions":"q$LongSummaryStatisticsConversions","r$Optional":"q$Optional","r$OptionalConversions":"q$OptionalConversions","r$OptionalDouble":"q$OptionalDouble","r$OptionalInt":"q$OptionalInt","r$OptionalLong":"q$OptionalLong"}}],"package_map":{"j$.io":"v$","j$.jdk.internal.util":"z$","j$.lang":"x$","j$.sun.misc":"D$","j$.sun.security.action":"B$","j$.time":"b$","j$.time.chrono":"l$","j$.time.format":"p$","j$.time.temporal":"j$","j$.time.zone":"n$","j$.util":"r$","j$.util.concurrent":"h$","j$.util.concurrent.atomic":"t$","j$.util.function":"w$","j$.util.stream":"d$","java.io":"u$","java.lang":"e$","java.time":"a$","java.time.chrono":"k$","java.time.format":"o$","java.time.temporal":"i$","java.time.zone":"m$","java.util":"q$","java.util.concurrent":"g$","java.util.concurrent.atomic":"s$","java.util.function":"f$","java.util.stream":"c$","jdk.internal.misc":"E$","jdk.internal.util":"y$","sun.misc":"C$","sun.security.action":"A$"}}
